{
  
    
        "post0": {
            "title": "云贵旅游",
            "content": "7-3 温州-贵阳 . 花果园（白宫，湿地公园，双子楼，金融街） | 吃丝娃娃（特色菜） | 住 米家智能酒店（语音控制，健身房，洗衣房，会客室） | 视频：https://www.bilibili.com/video/BV1554y1q7Xt/ | . 7-4 贵阳 . 甲秀楼（地标） | 中山西路地铁站（网红打卡地 看下雪） | 孔学堂（学习国学的好地方） | 花溪十里 | 视频：https://www.bilibili.com/video/BV15p4y1S7Qz/ | . 7-5 贵阳 . 贵州省博物馆（布展宏伟，身临其境，贵州的少数民族文化很丰富） | 钟书阁（网红打卡书店） | 海底捞（才200块） | CCPark（金融城 有点像青岛海上嘉年华的澳乐购 水上威尼斯 吃云南米线） | 视频：https://www.bilibili.com/video/BV1VK411J7xs/ | . 7-6 贵阳-荔波（贵州广西边界）-凯里（西江） . 荔波大小七孔（看瀑布，听水声，心情舒畅） | 西江千户苗寨（难以体验到民族生活，商业化较重，晚上可以在山顶看到村寨灯火通明，山上的旅店修得晚，环境更好，街边有酒吧，和成都的感觉类似，云贵川是一家） | 视频：https://www.bilibili.com/video/BV13g4y1i7iF/ | . 7-7 凯里-贵阳-普定 . 苗寨的早晨，比起晚上回归原本的味道，有小孩去上学 | 民族博物馆，购物店 | 长桌宴，酸汤鱼，高山流水劝酒 | 贵阳黔灵山公园观猴 | 住普定，夏天不用开空调的凉爽，和中国凉都六盘水有得一比 | 视频：https://www.bilibili.com/video/BV1u5411e7Xr/ | . 7-9 普定 . 普定老街 | 富强路，凯旋城步行街，县府广场 | 鱼片火锅 -视频：https://www.bilibili.com/video/BV1s54y1q7sw/（前半段） | . 7-10 普定-六盘水-安顺-普定（高铁） . 六盘水水城古镇（三线建设博物馆，沉浸式体验），凤池园（水城烙锅） | 若时间充裕也可去梅花山（冬季滑雪） | 安顺多彩万象（温泉酒店），王若飞故居，文庙，武庙，虹山水库（公交事件），儒林路（热闹古街），塔山广场（白塔） | 羊肉汤米线（和学校的差不多，不过他们当地人喜欢吃辣） | 视频：https://www.bilibili.com/video/BV1s54y1q7sw/（3：10开始） | . 7-12 昆明（高铁） . 石林（5A景区，卡斯特地貌地下侵蚀+地质抬升形成）。以前已经去过石林的人，可以在大石林景区走小路探索，有原始森林的感觉 | 南屏步行街（比温州五马街更宽），正义坊 | 吃野生菌（感觉和普通蘑菇并无区别） | 住东风广场地铁站旁，交通便捷，去南屏/金马碧鸡坊都近 | 晚上吃广东风味菜，喝粥/汤挺爽的 | 视频：https://www.bilibili.com/video/BV1JV411r74U/ | . 7-13 昆明-西双版纳（飞机，大巴太累，以后有高铁2021） . 斗南鲜花市场（巨大，昆明花城/春城，一定要来看） | 海埂公园赏滇池（浪很大，雨天浪更大，很神奇，不像大海那样平静） | 金马碧鸡牌坊（金碧辉煌，雄伟地标，旁边有吃的），南强街也有特色 | 大观楼（最长对联，公园很大） | 融创文旅城（各种民族的特色建筑，未开发好，水世界/雪世界，时间多的话可以消遣） | 吃米线（自己把料放到滚烫的开水中，有意思） | 住西双版纳告庄（酒店多且便宜，有夜市） | 视频：https://www.bilibili.com/video/BV1QZ4y1u7b5/ | . 7-14 西双版纳（包车，城里小，不贵，携程约或者在当地找均可） . 傣家千年古寨（走进真正的傣族人家） | 勐泐大佛寺（孔雀放飞，泼水广场，傣族佛寺），出发前规划好不要错过表演时间 | 基诺山寨（沉浸式表演，有吃有喝，价格稍高） | 另外值得去的：湄公河/澜沧江，缅甸 | 另外值得去的：植物园，原始森林，野象谷 | 告庄佛寺（摆拍，但不能拍搞怪片） | 星光夜市，赶摆夜市，湄公河六国水上市场（夜景好看） | 吃傣味（包烧，烧烤，有辣） | 视频：https://www.bilibili.com/video/BV1Bk4y1B7Nh/ | . 7-15 西双版纳-昆明（飞机） . 曼听公园（鹦鹉表演，大象表演），曾经的傣王御花园，最新的妻子的浪漫旅行在这里拍摄了一期 | 总佛寺（朝圣之景） | 回昆明，住博物馆附近（星耀体育场） | 视频：https://www.bilibili.com/video/BV1kD4y1m7Nw/ | . 7-16 昆明-安顺（普定） . 西山龙门（坐车到山顶看滇池/昆明城的别样风光，雨天就看不清了） | 博物馆（布展不是特别精彩），摩梭人生活特展很有艺术感，也让人了解到走婚的真正含义 | 视频：https://www.bilibili.com/video/BV1Kz4y1Q7Er/ | . 7-18 普定 . 大兴东博览城 | . 7-19 普定 . 青山水库 | 百花大世界 | 吃烙锅 | . 7-21 安顺 . 黄果树瀑布（分一下三个景区） | 天星桥（丰水期下半程关闭） | 大瀑布（可从六个方位看瀑布，亚洲最大，世界第三，但如何定义“大”），我认为小七孔景区更好看 | 陡坡塘（西游记取景处） | 其他可以去的地方：龙宫、夜郎洞 | 视频：https://www.bilibili.com/video/BV1kV411B7kW/ | .",
            "url": "/myblog/markdown/vacation/2020/07/26/%E4%BA%91%E8%B4%B5%E6%97%85%E6%B8%B8.html",
            "relUrl": "/markdown/vacation/2020/07/26/%E4%BA%91%E8%B4%B5%E6%97%85%E6%B8%B8.html",
            "date": " • Jul 26, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "我们为什么爱宋朝",
            "content": "《我们为什么爱宋朝》优酷 . https://v.youku.com/v_show/id_XMzkwOTA4MzgzMg==.html?spm=a2hbt.13141534.1_3.d_1_3&amp;s=79d1dbe7aaa24968af6d . 破解可用：油猴+视频解析（星空） .",
            "url": "/myblog/markdown/video/2020/07/02/%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E7%88%B1%E5%AE%8B%E6%9C%9D.html",
            "relUrl": "/markdown/video/2020/07/02/%E6%88%91%E4%BB%AC%E4%B8%BA%E4%BB%80%E4%B9%88%E7%88%B1%E5%AE%8B%E6%9C%9D.html",
            "date": " • Jul 2, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "拿到新眼镜了",
            "content": "放张图吧 . .",
            "url": "/myblog/markdown/essay/2020/06/28/%E6%8B%BF%E5%88%B0%E6%96%B0%E7%9C%BC%E9%95%9C%E4%BA%86.html",
            "relUrl": "/markdown/essay/2020/06/28/%E6%8B%BF%E5%88%B0%E6%96%B0%E7%9C%BC%E9%95%9C%E4%BA%86.html",
            "date": " • Jun 28, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "好词佳句",
            "content": "“万物并育而不相害，道并行而不相悖”（《中庸》） . “自强不息，厚德载物”的八字校训箴言分别源自《易经》中的乾卦和坤卦，”天行健，君子以自强不息”“地势坤，君子以厚德载物”。1914年梁启超在清华大学作《论君子》演讲时用它们诠释君子人格，表达对清华学子的殷切期望，后来逐渐演变成为清华校训。百十年来，正是在对这八字校训精神的不断体悟和生动诠释中，一代又一代清华人怀抱着教育强国的热望，勇立时代潮头，殚精竭虑，矢志奋斗，将当初的一所留美预备学校建设成为如今一所值得国人骄傲的世界一流大学。 在这八字校训中，“自强不息”比较好理解，勉励我们无论在什么时候和什么状况下都不要退缩、懈怠和自满，要有一种刚毅坚卓、奋发图强的积极人生态度。“厚德载物”则比较难以理解。根据梁启超先生一百多年前的解读和我自己的体悟，它的核心意思可能是勉励我们要有仁爱之德，要有宽厚博大的胸怀，在个人和公共生活中不唯我，不排他，努力做到己立立人、己达达人，己所不欲，勿施于人，像大地一样能够覆载万物、化育万物，最后臻达“万物并育而不相害，道并行而不相悖”（《中庸》）的理想境地。如果这种理解是有道理的话，那么，我们是否可以认为，比起“自强不息”来说，“厚德载物”则更是清华八字校训精神的核心，彰显了前辈学者对于清华莘莘学子的殷切期盼：自强不息是手段，厚德载物才是目的；自强不息的根本价值追求不在于个体的自我实现，而在于不断增进他者、社会、民族、国家和人类的福祉。“自强不息，厚德载物”是清华人的“精神名片”，也是母校母院送给诸位毕业生的人生锦囊。愿诸位毕业生同学弥足珍惜，深切领会，努力践行，用一生的坚守使之不断发扬光大！ 谢谢大家！ . 面对人生的不确定性，你们要学会选择，把握住命运的方向。命运虽然充满变数，但实际上是有迹可寻的。对意义的不断追寻和对价值的终身坚守，就是求解命运之谜的最好方法。在面对选择时，要追寻意义，不因名利熙攘而困扰；要坚守价值，不因境遇改变而动摇。不同的选择会将人们引向不同的人生。中国水利水电事业的主要开拓者、两院院士张光斗先生，在清华大学执教60多年。1937年“七七事变”爆发后，他放弃在美国继续攻读博士学位，毅然选择回国参加水利水电建设。1947年，他谢绝美国友人对他全家赴美的邀请，坚定选择留在自己深爱的土地上。对于张光斗先生来说，用一生深情凝望祖国的江河就是他人生全部的意义和价值。要消除命运的不确定性给人生带来的迷失，就必须超越当下和自我的局限，以长远而坚毅的目光审视自己的内心和未来，在起伏难测、激荡不停的命运之海中，在一次又一次的人生选择中，把握住前行的方向。 . 面对人生的苦难，你们要勇于抗争，做命运的主人。人生如远航，暴风骤雨和惊涛骇浪总是难以避免。今年是世界著名音乐家贝多芬诞辰250周年。贝多芬26岁时听力就开始下降，到45岁时几乎彻底失聪。在31岁时，他在写给朋友的信中，描述了耳疾带来的痛苦，却倔强地说：“我要扼住命运的咽喉。”在38岁时，他创作的《命运交响曲》首次公演。从此，《命运交响曲》成为了人们战胜苦难的灵魂战歌。苦难可以锤炼人的品格，但决不能让它主宰人的命运。“蒲柳之姿，望秋而落；松柏之质，经霜弥茂。”习近平总书记指出：“中华民族历史上经历过很多磨难，但从来没有被压垮过，而是愈挫愈勇，不断在磨难中成长、从磨难中奋起。”人类历经大灾大疫，但每次都能顽强地从低谷中走出来。主宰命运的是坚韧的意志和坚定的信念。无论命运的考验以怎样的方式敲响人生之门，永不服输就必定会迎来最终的胜利乐章。 . 面对人生的短暂，你们要将个人的命运自觉融入到民族的命运、人类的命运当中，实现永恒的生命意义。每一个人都不是孤岛，每一个民族的命运都与其他民族的命运相互交织。鲁迅先生说，“无穷的远方，无数的人们，都和我有关”。人的一生是短暂的，也可能是平凡的，但如果每个人都能在有限的生命里去关怀他人、关怀世界，都能在危难时不畏艰险、挺身而出，与他人携手同心、患难与共，就能在塑造个人命运的同时，汇聚起改变民族命运乃至人类命运的磅礴力量，个人的生命也由此被赋予了永恒的意义。在疫情期间，无数的医护人员、快递小哥、基层工作者等平凡人，毅然成为“最美逆行者”“生命摆渡人”“健康守门员”，他们共同绘就了一幅触动人心、感动世界的美丽画卷。人类的健康和家园需要所有人去构筑。我们相信，人类善良、正义、理性的光辉将永远照映心灵、温养生命、点亮未来。 . “同舟自古无胡越，南北东西路不同。”每个人都有自己的前途命运，每个民族都有自己的发展道路，但人类是一个休戚与共的命运共同体。同学们，你们正处在砥砺奋进的新时代，生逢其时、重任在肩。希望你们把握人生方向，做命运的主人，将小我融入国家民族乃至全人类的大我当中，以民族复兴的步伐为节拍，以永远奋进的青春为旋律，谱写新时代的命运交响曲，共岁月峥嵘、留历史回响。 . 世界上只有一种英雄主义，那就是在认清生活真相后，依然热爱生活。罗曼罗兰 . 高中学生组织“打杂第一人” 埋下创业初心的地方 高中时期虽未正式创业，但策划开展学生活动的经历，为我积累了大量活动组织、团队协作的经验，为步入大学后进行创新创业埋下了一颗种子。作为上海市第一批“3+3”高考改革的亲历者，当时学校非常流行学生综合素质培养。除了学科成绩过硬，也要求学生具备相当的科研、实践和社会工作能力。在一次高中学生会主席论坛的活动中，我意外收到了一张传单，上边用黑底白字写着“想成为学生领袖吗？这次，跟我们一起干票大的”，剩下是一些面试信息。在好奇心驱使下，我寻着传单地址参加了这个学生组织的招新面试。后来我才了解到，这是全部由上海各中学的高中生成立的学生领袖组织，旨在整合高中学生资源、组织跨校高中生活动、向社会展示高中生领袖风采。而我，竟然是这个组织当初面试并录取的第一位干事。也就是说，在我之前的其他同学，都是组织各部门的负责人，而我，是该学生组织的“打杂第一人”。 . 组织成立后的第一次活动，是要组织高中生毕业晚宴。由于我的“身份优势”，整个活动中但凡涉及要具体执行的工作，诸如策划案撰写、赞助合同撰写、与场地方布展方洽谈、邀约各大新闻媒体，都免不了要我“亲自出马”。虽然非常辛苦，却也积累了不少的经验与资源。后来，我们成为上海首家高中学生领袖组织，在和平饭店顺利举办了第一届的高中生毕业晚宴。活动邀请了上海各大中学的学生会主席、“学生网红”“毕业生前辈”和新闻媒体人参与，在上海学生圈取得了空前热烈的反响。再后来，我以“支持者”的身份不断协助各类学生组织举办各式各样的学生活动，诸如：全国首届高中生时装秀、中学生公益经验分享论坛、818高中生音乐节等等。 . 现在回想起来，当初和各大学生组织的“老板”们合作了这么多的学生活动，虽然没有专门注册公司，但搭班子、定战略、整业务的活，其实和创业有异曲同工之妙。那颗不安分的心，也是在那时候开始萌芽的。 . 虽屡战屡败 每次都要比前一次有进步 失败不可怕，作为大学生创业团队，船小好调头，发现问题及时纠正，只要把所有巧克力都吃个遍，总会有那颗甜心巧克力被我选中。 . 苦尽甘来 却是新征程的开始 . 第一次不可能成为现实： 科研路的启程 . 第二次不可能成为现实： 教育实践与科研的结合 . 无数次不可能， 在温暖的华师大实现 . 愿每一份努力与付出都能不负时光与年华，越努力越幸运 . 联合国科教文组织信息技术研究所主任展涛指出，此次论坛的主角是学生，因为学生才是教育的未来，谈未来教育，须从学生的角度看教育，学生不仅是学习者，更是引领未来教育的变革者。雅典大学的Michael Meimaris教授指出，数字化讲故事的几大要素包括清晰的视角、情感的刺激、问题的张力、讲述的声音、背景的音乐、叙事的节奏等，这些要素都影响着听众的情绪，对信息的传达起着至关重要的作用。日本信州大学的林宽平（Kampei Hayashi）准教授指出，数字化学习的成本正在递减，越来越多的课程通过网络开放给大众，意味着全球竞争不断增强，自我激励和自律能力在这个时代变得尤为关键。非政府组织ICEFIL副会长Bijay Dhungana指出，数字化学习中正面临一些挑战，如学习工具、远程交互等，“翻转课堂”的教学理念是解决这一问题的关键。 .",
            "url": "/myblog/markdown/essay/2020/06/27/%E5%A5%BD%E8%AF%8D%E4%BD%B3%E5%8F%A5.html",
            "relUrl": "/markdown/essay/2020/06/27/%E5%A5%BD%E8%AF%8D%E4%BD%B3%E5%8F%A5.html",
            "date": " • Jun 27, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "炒团毕业",
            "content": "200623火箭毕业了，违规女孩是永远的。 . 2018年夏天，那个时候国内女团走到一个瓶颈期，是她们为了生存，创出了一片天地，开创了这个时代。2020年夏天，一个时代结束了。次世代有更多人加入，这里本没有路，走的人多了，便成了路。她们无需太担心生计，只要追梦就好。 . 也就有了新的slogan：敢！我有万丈光芒！ .",
            "url": "/myblog/markdown/essay/2020/06/26/%E7%82%92%E5%9B%A2%E6%AF%95%E4%B8%9A.html",
            "relUrl": "/markdown/essay/2020/06/26/%E7%82%92%E5%9B%A2%E6%AF%95%E4%B8%9A.html",
            "date": " • Jun 26, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "台大陈蕴侬career分享",
            "content": "作者 swallow0130 (小儂兒) 看板 studyabroad . 標題 [錄取] CMU CS PhD . 時間 Thu Feb 14 15:30:54 2013 . ─────────────────────────────────────── . https://www.bilibili.com/video/BV11i4y1G7Pp . My website: http://vivianchen.idv.tw . My research interest: speech processing . Admission . CMU SCS-LTI (Language Technologies Institute) PhD (1/28) full tuition wavier + stipend of $2,500/month . Pending/Rejection . Other 3 CS PhD . Background . MS: CMU SCS-LTI 2011-2013, GPA: 3.8/4.0 MS: NTU CSIE 2009-2011, GPA: 4.0/4.0 (95.10/100), Ranking: 1/100 BS: NTU CSIE 2005-2009, GPA: 4.0/4.0 (91.91/100), Ranking: 3/100 . Test Score . GRE (07/2010) V: 560 Q: 800 A: 2.5 (機考) (06/2010) V: 430 Q: 800 A: 3.0 (筆考) TOEFL (XX/2010) 考了五次依然非常悲劇的分數 IELTS (07/2011) L: 6.5 R: 8.0 W: 6.5 S: 6.0 Overall: 7.0 . Award . Student Best Paper Award 2010 . Student Best Paper Finalist 2012 . 書卷獎 * 5 2007-2009 . 斐陶斐榮譽會員 2011 . 計算語言學學會最佳碩士論文獎 2011 . 前瞻語音科技獎學金 2009-2011 . 台大資訊博士資格考通過(演算法, 人工智慧, 計算理論) 2010 . 優良助教獎 2010 . Yahoo!行動通訊特別獎 2008 . …(詳見website) . Publication . International conference paper - Fisrt-author * 8 (published) &amp; 1 (submitted) - Co-author * 3 (published) &amp; 1 (submitted) . Recommendation Letter . 1 from NTU CSIE 3 from CMU SCS-LTI . Working Experience . CMU Graduate Research Assistant 2011-2013 . Student Volunteer of International Conference 2012 . 台大資訊助教(語音處理+專題研究*2) 2009-2011 . Activity . CMU Taiwan Scholar Society幹部 . 台大資訊碩士生畢業致詞代表 . 台大資訊研究生代表 . 台大熱舞社多媒體長 . 台大資訊大學部畢代 . 台大資訊三十年系慶表演負責人 . 資訊之夜女舞負責人(三年) . 前情提要: . 其實我在兩年前就申請過一次CS的PhD，但是全滅 (英文太爛)，只上了CMU的MS program。 . 因為家裡經濟不允許，所以沒有funding幾乎也沒有辦法去念， . 後來得知CMU的LTI很少直接收PhD學生，外來的學生都收成MS， . 找到老闆就有RA，一半的學分是research，算是pre-PhD， . 最後才決定到CMU再念個MS後兩年再申請 (上了就等於抵掉PhD前兩年)。 . 很幸運的找到老闆，得到了tuition + monthly stipend的funding。 . Motivation: . 因為我爸從小就希望我未來出國攻讀博士 (哪來的怪願望…)， . 加上我很幸運(or不幸)的從國中開始就考上數理資優班 (福和國中+北一女)， . 一路從科展到專題研究 (我幾乎一直是做數學領域)，完全抹煞了想念到博士的欲望。 . 因為太痛苦了… . 而且我爸媽完全就是個平凡的人 (大學畢業的上班族)， . 我覺得他們根本不了解”作研究”的苦: 孤單、壓力、未知… . 再加上我整個叛逆至極，死都不願意聽從我爸的話， . 不想出國 -&gt; 不想考托福 -&gt; 英文不需要好 -&gt; 英文爛 -&gt; 討厭英文 -&gt; 不想出國… . 就這樣recursively，我的英文爛到一個炸開(聽+說超爛)， . 反正我沒有要出國留學，就這樣就好…就一直抱著這個想法活到了研究所。 . 而且我一直是打算念完MS就去業界工作的， . 結果在碩一的時候，我忽然發現我對作研究還滿有興趣的! (病了?) . 就漸漸開始考慮未來想要走教職 (因為我還算滿喜歡教別人的)， . 由於我從小念書都沒有真的真心想要念書，只有到大學才真的喜歡上自己所學的領域。 . 所以當大學教授就成為我的未來夢想職業了!!! (還變真多) . 既然想要當大學教授，走上出國留學這條路就是理所當然， . 漸漸地，我竟然完全走向了我爸一直以來希望的那樣 (太可怕了)! . 但是因為直到碩一才有這樣的念頭，想要碩士念完直接出去， . 碩二剛開學就必須投出申請了 (超趕到一個無以復加)!!! . GRE &amp; TOEFL: . GRE雖然大家都覺得痛苦到爆，但是至少是可以操控一點的，就是”背”!! . 端看你多認真努力的”背”，反正就是那樣，我覺得台灣學生至少是比較擅長這點的。 . 雖然我還是考得很不怎樣 (AWA根本就是悲劇)，但至少我認為努力還是能在短時間達成。 . TOEFL就是一個悲劇到不行，因為我的聽力非常的爛，再加上TOEFL除了R其他都要聽， . 我最好的成績就是88…但因為真的來不及也無法再進步，最後就用88申請了= =… . 這其實一直是我覺得自己很糟糕的地方，算是沒有完全準備好，就投出申請了。 . SOP: . SOP能多早開始就多早開始，因為唯有開始了，才會發現離完成有多遙遠= =… . 我覺得我很確定我未來想做的，但是那不一定是學校想做的， . 要如何寫的夠明確，卻又不能太過狹隘真的非常難。 . 由於我也沒有寫得很好，所以無法提供甚麼好的建議。 . Recommendation Letter: . 我覺得好的推薦信比甚麼都重要，當然教授若比較大咖是比較加分沒錯， . 可是寧可選擇夠瞭解你的，也不要選擇不太熟的大咖教授。 . 而且其實因為我沒有一封推薦信是自己擬稿的，所以當然也不知道究竟內容如何， . 不過看這樣的結果應該是有不錯的推薦信吧XDD~ . Interview: . 兩年前申請時，剛好發表第一篇conference paper， . 更幸運的是拿到了student best paper!! . 在conference期間 (12月)，MIT的教授就直接找我當面interview， . 但是那是我第一次去美國，第一次上台oral，第一次跟外國人講話， . 再加上我的英文聽+說爛到不行，想當然爾整個超爛，悲劇~~~ . 1月的時候，MIT的同lab的另外一個教授 (台灣人) 剛好來台灣， . 他又找我去面對面interview了一次，內容完全與研究無關，就是想看我英文能力吧@@~ . 我還是覺得自己盡力了，但我知道表現的應該還是不太好。 . 接著CMU的教授也跟我phone interview，問了我托福成績的事， . 所以英文差整個就是讓我生不如死，感覺一切都是因為英文而搞砸的= =… . 最後被MIT拒絕了，教授寫信來跟我說他覺得我英文沒有到門檻真的保不了我。 . CMU最後給了我MS，算是大發慈悲的一件事。 . Reapply: . 因為知道兩年後還得重新申請一次 (CMU規定一定要重申請，沒有內部直申)， . 完成了台大的碩士論文&amp;離開台灣前，準備了雅思，第一次就考了overall 7.0!!! . 對於聽力差閱讀較好的我來說，雅思比較容易拿高分。 . 在NTU的碩二，我又發了三篇的paper，也獲得了碩士論文獎。 . 在CMU期間，我拼命做研究，有機會就投paper，只為了reapply可以成功拿到AD。 . 一年半來，我總共又發表了四篇first-author paper和一篇second-author。 . 去年幾乎都忙於作研究和CMU超級操的課業，每天平均睡眠 &lt; 4hrs，超崩潰!! . 很幸運的，在一月底就拿到admission了，也因為找到很好的老闆，所以還過得滿開心的! . 心得: . 其實一直覺得如果可以早一點決定要出國念書，早一點準備托福， . 在第一次申請的時候就把托福考到門檻，相信可能在兩年前就順利拿到PhD的offer了。 . 雖然說現在的結果幾乎就跟兩年前拿到PhD無異，但這兩年來的痛苦真的是只有自己才懂。 . 還有我認為在大學就有很好的成績的人，若已經有出國念PhD的打算， . BS畢業直接申請比MS好很多，以下是我的見解。 . BS畢業不會要求你在research上的成就，主要就看GPA，若是成績很好， . 直接拿到好學校的AD也是有很大的機會的。 . MS畢業通常都會看你在研究上的成果，再者，你的研究領域幾乎已經大概固定了。 . 好處是如果剛好有教授的領域跟你極度契合，那就是很大的加分。 . 壞處是選擇相較而言就較少，因為領域已經固定了，就只能從相關的領域中去找老師。 . 以我自己為例，在NTU念MS是走語音的，在CS領域裡 (有些是在EE中的訊號處理部分)， . 主要做語音比較大的team就只有MIT和CMU (就是和我之前做的有高度相關的)， . 這就是一個很大的致命傷，我想也是為什麼我到頭來只收到這兩家的interview的原因。 . 因為team本身比較少，又因為是MS畢業，所以只有領域極相關的教授會對你有興趣。 . 如果是BS就比較彈性，因為沒有非常focus的領域，所以新投入哪個領域都比較容易。 . 獲得及失去: . 不過我還是並不會後悔我沒有在大學畢業後就決定出國念PhD， . 因為念了碩士後讓我真正思考到我自己想要的以及想達成的， . 那是我在念大學時從來沒有想過的。 . 而且可能就是因為我沒有想過要出國，所以我都是靠著興趣念書，也沒有維持GPA的壓力， . 反而很神奇的在大學就拿了4.0 lol~ . 一次資夜都沒有少參與，每次資訊營也都在，連熱舞社都參加了 (還當幹部= =)。 . 這讓我在NTU過的非常開心，幾乎算是0壓力，也讓我找到我真正想走的路。 . 很多人會建議若想出國，在大學的時候越早加入實驗室越好， . 其實如果目標就是要上很好的學校，這當然很加分， . 不過大學只有一次，我覺得參與許多系上的活動等等， . 其中跟大家哈拉打屁、夜衝等等的行程，現在想起來， . 那是我人生中最難以忘懷的一段快樂時光。 . 如果我把這時間拿去做實驗，我當然可能會有更棒的申請資料， . 但是對我來講，這樣失去的更多。 . 未來還很長，我沒有覺得越早踏入成熟越好。因為青春就只有一次！ . (當然除非你熱愛研究 » 玩，不過我還是個平凡人，所以我還是不想少玩到) . 建議: . 再來就是念PhD真的需要很堅強的意志，因為真的太多事無法與人道， . 而且又有太多research以外的事情要照顧，life真的非常tough~ . 系上收的MS原本也都是申請PhD進來的，兩年後，大概只剩一半的MS想繼續攻讀PhD， . 所以我認為念PhD是非常需要堅定的意志和毅力的。 . Doctor of Philosophy - 哲學博士 . 這是為什麼這個degree困難的地方，它的重點不是專精於某一領域， . 而是在這個反覆遭遇問題、思考問題、解決問題、開創領域的過程中， . 正確的尋找所謂自己的”價值觀”以及人生的方向。 . 當你獲得degree時，你獲得的是全方位的培訓及提升，這並不限於科學，而是哲學。 . 希望這遲了兩年的錄取文還是可以幫到一些未來想出國的學子們! . – .",
            "url": "/myblog/markdown/essay/2020/06/26/%E5%8F%B0%E5%A4%A7%E9%99%88%E8%95%B4%E4%BE%ACcareer%E5%88%86%E4%BA%AB.html",
            "relUrl": "/markdown/essay/2020/06/26/%E5%8F%B0%E5%A4%A7%E9%99%88%E8%95%B4%E4%BE%ACcareer%E5%88%86%E4%BA%AB.html",
            "date": " • Jun 26, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "近日Popi",
            "content": "Popi Yikshing . 过程or结果 . 学术看过程，工程看结果。 . 老殿后的变化 . 老殿后的那一束火一直在被接力着，每一代人都在创造着属于他们的故事。依旧保持着独立和高尚。 . 一试点就成功，一推广就失败 . 政策落地需要本土化； | 一些政策本身就是不平等的； | 需通力合作，试点地区让利给其他地区，这不是损失； | 有时人们趋于原先的安定，不想改变。 | 计算机主要技能 . python sql html/css/js php . . 用于写饺子榜 给基础教育的建议 . 相较本科学习，主要是学习方式上的转变。表现为自主性和目的性。 . | 我的高中也注重培养学生的自主性，很多时候要我们自己对自己的决定负责，而不是听命于老师。 . | 目的，对于高中生而言，可能是成绩，是高校排名，而到大学才知道，排名高不代表就业前景好。这是不同的角度。希望可以早一些让同学认识到这一点。 . | 衔接二者，需要的是，我认为在考完试填志愿前，可以和大三大四学长聊一聊，有一个目标。 . | 还有，学校要记住教书育人的本质，塑造好学生的三观。 . | . . 仅供参考 如何教学 . 因材施教、举一反三、题海战术、知识梳理 . 如何学国学 . 看纪录片、看书 . 如何看待线上旅游 . 替代线下 何种体验 自然or人文 . 否 | 吃喝逛买拍 看展 听音乐会 | - | . 否 | 吃喝玩乐 累 | 分情况 | . 否 | 只有视觉，没有陪伴的真情实感。火车窗外的风景。做计划。小众景点 | 人文的奇思妙想，与古人的交谈 | . 否 | 同伴 暴走 吃 | 都喜欢 | . 否 | 建模数据量太大（三角面）。沿途的风景亦是风景 | 人情味 | .",
            "url": "/myblog/markdown/popi/2020/06/21/%E8%BF%91%E6%97%A5Popi.html",
            "relUrl": "/markdown/popi/2020/06/21/%E8%BF%91%E6%97%A5Popi.html",
            "date": " • Jun 21, 2020"
        }
        
    
  
    
        ,"post7": {
            "title": "观《传闻中的陈芊芊》",
            "content": "陈芊芊 . 这部剧编排精巧。立意有价值且浅显易懂，剧中生硬的玩梗、炫技。都是简单易懂的，不需要太多的思考，但都能明白立意。一是男女平等，二是珍惜感情（类似大话西游之月光宝盒）。故事讲述的是一个编剧卡进自己的剧本中，在古代谈了一场恋爱，回到现代后幸运重逢。想象力丰富，剧情也较合理。但提到的守宫砂并无考证。 . 最近穿越剧很火，确实帮助我打开了脑洞，亦是接下来可以研究的方向。 . . 最近还在做什么？ . 今天下午在网上看了金环日食直播，倍感震撼！ . 我想竟然在家就能看到，上一次是十几年前，还是真的在室外观看呢。现在可以看直播，对于我这样没有设备、没有条件的人来说很友好。 . 最近看了Taksu San的直播，提到疫情下，融资困难，但创客回到原先追求的造物，在更多的国家出现了创客空间，这些都是好的表现。 . 最近在Popi上和大家讨论了几个问题，下一篇与大家分享。 . . 感谢你的阅读 .",
            "url": "/myblog/%E9%9A%8F%E7%AC%94/markdown/%E9%99%88%E8%8A%8A%E8%8A%8A/%E6%97%A5%E9%A3%9F/maker/2020/06/21/%E8%A7%82-%E4%BC%A0%E9%97%BB%E4%B8%AD%E7%9A%84%E9%99%88%E8%8A%8A%E8%8A%8A.html",
            "relUrl": "/%E9%9A%8F%E7%AC%94/markdown/%E9%99%88%E8%8A%8A%E8%8A%8A/%E6%97%A5%E9%A3%9F/maker/2020/06/21/%E8%A7%82-%E4%BC%A0%E9%97%BB%E4%B8%AD%E7%9A%84%E9%99%88%E8%8A%8A%E8%8A%8A.html",
            "date": " • Jun 21, 2020"
        }
        
    
  
    
        ,"post8": {
            "title": "随笔一则",
            "content": "为什么写? . 我是YAU YIKSHING，开这个博客原本是建设虚谷网站的探索。现在想来，确实我没有一个日常更新的博客网站，于是决定在这里保持日常的更新。 . 最近在做什么？ . 最近在家远程考试，基本都考完了，结果自己比较满意，但现在的规则就是只知道自己的成绩，而不知道别人的成绩，我心里也没底到底我的水平如何。写道这里，我想，如果系统增加一个排名/占比就更好了。 . 昨天去配了新的眼镜，款式很喜欢。上一次配镜是五年前了，这五年视力几乎没有变化，很开心盯了五年屏幕，眼睛并无大碍。有机会上传图片给大家看看。 . 最近消遣的方式是看综艺，青你2，创3，炙热，塞纳河，还有一些电影，有他们的陪伴，我在学习之余也轻松一些。 . 学习的话最近大部分时间在B站，还有时候用微博。用它们可以快速找到需要的学习资料，填补课堂的空白。 . 刚开始学习做UP主，主要是搬运一些资源，B站缺少的一些资料我也会去上传一些。 . 前几天，听了一个报告，提到中国有相当大的农村学生数量，对我国的教学来说是极大的考验。这些年，有肉眼可见的改善，比如校舍翻新，课桌每人一张，课本人人有。但仍然有着一些问题，主要表现为一下三点： . 1、户口。孩子不能去城市上学。农村学生基数大，成绩相较城市拉下两个年级。发达国家的学生集中在城市。 . 2、教师。城市教师不愿意去农村。农村教师水平低，工资低。 . 3、培训。教师培训效果不佳。受能力、技术、时间等因素限制。 . 一些方案：电脑辅助学习替代补习班，用AI提高英语口语水平。远程教育对数学课有效。 . 在中国开展实验的有利条件：中国有足够的农村学生（4个小学生有3个在农村），中国的技术崛起。 . . 感谢你的阅读 .",
            "url": "/myblog/%E9%9A%8F%E7%AC%94/markdown/2020/06/17/%E9%9A%8F%E7%AC%94%E4%B8%80%E5%88%99.html",
            "relUrl": "/%E9%9A%8F%E7%AC%94/markdown/2020/06/17/%E9%9A%8F%E7%AC%94%E4%B8%80%E5%88%99.html",
            "date": " • Jun 17, 2020"
        }
        
    
  
    
        ,"post9": {
            "title": "技术探索·你会用github协同共建一个“开源”网站吗？",
            "content": "技术探索 | 你会用GitHub协同共建一个“开源”网站吗？ | . 原创  谢作如 邱奕盛  中国信息技术教育  5月19日 . 随着安卓智能手机的普及，“开源”这一名词逐渐被大众接受。 . 教育部发布的《普通高中信息技术课程标准（2017年版）》，要求重点普及“开源”思想，引导学生理解并自觉践行开源的理念与知识分享的精神。 . 如何与更多的人一起分享自己的学习心得？除了在公共平台发表文章外，做一个网站也是一个重要的途径。 . 但对很多人来说，做网站似乎是一个专业的技能，会涉及域名购买、解析等，其实做一个网站并没有那么难，只要会用GitHub就可以了。 . . 图 1 GitHub网站 . 用GitHub建站的可行性分析 . GitHub是全球最大的代码共享平台，准确地说，Git Hub是一个面向开源及私有软件项目的托管平台。 . 除了支持Git（一个开源的分布式版本控制系统）外，GitHub还提供了很多有趣的功能，如GitHubPages。选择GitHub Pages来建网站，理由有如下三个： . 使用方便。Git Hub Pages集成在GitHub中，直接和代码管理绑定在一起。采用代码更新命令进行自动部署，使用起来非常方便。维护方面同时支持在线管理和客户端管理两种方式。 . 免费。GitHub免费提供了“username.git hub.io”的域名，还支持自定义域名，几乎等同于一个免费的静态网站服务器。 . 无数量限制。Git Hub Pages没有数量使用限制，每一个Reposit or y（仓库）都可以部署为一个静态网站。 . 当然，如果仅仅是发布静态网站，那么更新网站就会变得很无趣。最近，GitHub的程序员发布了FastPages 的工具，能够将文档直接转换为网页。支持的文档类型很多，如Word、MarkDown和Jupyter等。也就是说只要按照规范上传文档，主页会自动进行更新。 . . 图2 用FastPages生成的网站 . 建立GitHub Pages的步骤介绍 . 首先需要注册GitHub用户。有了用户后，再建一个名称为“username.github.io”的Repositor y（仓库），一个静态网站就建好了。 . 例如，笔者的用户名是“xiezuoru”，这个库的名称就是“xiezuoru.github.io”。然后，在这个Repositor y的根目录下建一个名称为“i ndex.ht ml ”的文件，输入HTML代码，主页就产生了。访问“xiezuoru.github.io”，即可看到主页的效果。 . 如何设计一个精美的网站？ . 如果对HT M L语言不熟悉，就需要用一些专业的网页设计工具，如DreamWeaver、Avocode。 . 如果对页面的要求不高，最简单的办法就是用Word。上传文件则推荐用Git Hub客户端工具，它会自动比较本地目录和云端仓库的更新状态，类似云盘。 . . 图 3 谢作如的GitHub Pages . 利用FastPages实现自动转换文档 . 要实现自动转换文档为网页，需要建一个具备“FastPages”功能的仓库。这个仓库不能自己建立，也不能用“fork”功能来产生，而是要通过一个特定的仓库“generate”（生成）。 . 具备Fast Pages功能的原始仓库是“fast ai/fast pages”，访问地址为ht tps://github.com/fastai/fastpages。考虑到“fastai/fastpages”是英文版，笔者汉化了一个仓库，名称为“Eas onQYS/fastpagesJupyter”，访问地址为：https://github.com/EasonQYS/f a s t p a g e s Ju p y t e r/。 . 在这个地址的后面加上“g e n e r a t e”，即https://github.com/EasonQYS/fastpagesJupyter/generate。或者在readme页面中点击生成网站的链接，然后在跳出的页面中，给这个仓库起一个名称。仓库名称没有规定，只要不使用“user name.github.io”就可以。 . . 图4 Fastpages的中文版本 . 仓库建立成功后，等待大约30秒左右的时间，注册GitHub的邮箱会收到一封英文邮件。按照邮件的要求，生成一对SSH密钥，分别填写在指定的网页中，这里不再赘述。访问“username.github.i o/repository”就能看到这个新主页了。 . . 图 5 收到的英文邮件 . 例如，笔者的Fast Pages 地址就是https://xiezuoru.github.io/blog/。需要注意的是，无论是否填写密钥，这个页面都能看到，对应的文件就是“i nde x.ht ml ”。只不过没有填写密钥，这个网页文件将不能自动更新。 . . 图6 默认的主页效果 . 修改仓库根目录下的“index.html ”文件，即可修改主页的效果。其中自动更新的文件列表会出现在“最新博文”的下方。而“关于我”“查找”“标签”这几个网页，要在“_pages”文件中修改。关于这个网站的基本信息，需修改“_confi g.yml ”文件。 . 那么，如何上传文档自动更新主页呢？只要将文件按“年-月-日-标题”的格式命名，上传到相应的文件夹下即可，如“2020-04-01-虚谷计划简介.doc x”。其中，Word文件要上传到“_word”文件夹，Mark Down格式和网页格式的文档，要上传到“_post s”文件夹中，jupy ter文件则要上传到“_notebooks”文件夹。 . 建站实践——虚谷计划网站  . 按照上述的方式，笔者给“虚谷计划”建立了一个网站。先建立一个名为“ vvp lan”的organizations（组织），然后建一个名为“vvplan.github.io”的仓库。 . 为了访问方便，笔者设置了cname（别名），将域名www.vvplan.cn指向到这里。 . 虚谷计划下面有四个项目，笔者对应分别建立了四个具备FastPages功能的仓库，逐一填写密钥。然后，邀请虚谷计划组委会的成员加入这个组织。现在，更新网站也可以像Git Hub中的其他项目开发一样，采用协同工作的形式，权限设置非常灵活。 . . 图 7 基于GitHub Pages建的虚谷计划网站 .  结  语 . Git Hub Pages是“开源”的，如果有人喜欢你的网站结构或者内容，只要按下“fork”，就能将你的网站clone（克隆）一份。这样一来，就有越来越多的人从这样的分享过程中受益。 . 除此之外，你还能从这个建站的过程中深刻理解文档格式，体会到标记语言（HTML 、Mark Down、XML、JSON 和YAML等）在信息交流中的重要意义。 . 这些文档的转换，都是用Python脚本代码来完成的，还可以研究转换脚本，感受Pyt hon的强大功能。 . 当然，最重要的收获是协同共建的机制，Git Hub能够记录所有用户的操作，分布式的开发和集中式的管理，让协同开发变得有序而灵活。 . .",
            "url": "/myblog/2020/06/10/%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%B4%A2-%E4%BD%A0%E4%BC%9A%E7%94%A8GitHub%E5%8D%8F%E5%90%8C%E5%85%B1%E5%BB%BA%E4%B8%80%E4%B8%AA-%E5%BC%80%E6%BA%90-%E7%BD%91%E7%AB%99%E5%90%97.html",
            "relUrl": "/2020/06/10/%E6%8A%80%E6%9C%AF%E6%8E%A2%E7%B4%A2-%E4%BD%A0%E4%BC%9A%E7%94%A8GitHub%E5%8D%8F%E5%90%8C%E5%85%B1%E5%BB%BA%E4%B8%80%E4%B8%AA-%E5%BC%80%E6%BA%90-%E7%BD%91%E7%AB%99%E5%90%97.html",
            "date": " • Jun 10, 2020"
        }
        
    
  
    
        ,"post10": {
            "title": "走近何克抗  学习他的跨越式教学",
            "content": "走近何克抗  学习他的跨越式教学 . 来源：http://blog.xxt.cn/showSingleArticle.action?artId=5959683 . 在《小学教学》上看过一篇有关何克抗先生的一篇叙事型报道，知道了这样一位投身中国教育，令人由衷钦佩的老者。在观看《我的人生我的课》时，又见到了这位老者。 . 何克抗，今年76岁，是北京师范大学教育学部的教授，我国第一位教育技术学博士生导师，也是我国教育技术学科的开创者与奠基人之一。 . 这位大教授，不爱在宁静的大学里待着，却专爱往偏僻的小学跑。有同行评价老先生：“大学请不动，小学不请自来。” . 　　二年级（3）班的语文课刚刚开始。孩子们见到何克抗，兴奋起来，“爷爷，坐我这儿吧！”何克抗的眼睛又眯成了一条缝儿，他走到教室的角落里坐下，冲语文老师段淑芬点了点头。 . 　　这节课讲《雷雨》。按一般的课堂程序，老师会先把生字写出来，然后带着孩子们反复练习。而段淑芬则把主动权交给了学生。“哪些生字你们不会?”孩子们七嘴八舌，最后集中在“压、乱、垂、虹”。“那该怎么记这些字？”段淑芬再一次发问。何克抗笑着环视四周，期待着孩子们的回答。 . 　　学生们你一言我一语，课堂一下热闹起来。“我用猜字谜的方法来记！‘压’是庄字一点在腰下！”“我来教大家记‘乱’，舌字长个小尾巴！”……一个胖胖的男孩涨红了脸，大声道：“我会记‘虹’，一只小虫在打工！”教室里笑声一片。 . 　　认完了生字，段淑芬出人意料地让孩子们合上课本，拿出与课文匹配的阅读材料。何克抗看了看手腕上的表，“不错，刚好20分钟。” . 　　一节课40分钟，前20分钟用于老师与学生的互动教学，后20分钟用于读和写，其中10分钟扩展阅读，10分钟写课堂感想。这种“211”教学模式，正是何克抗设计的。过去的13年中，这位大教授奔波于全国各地的山村中小学，进行着“跨越式教学试验”，悄悄改革着语文课堂。 . 　　《北京文学》曾刊登过一篇著名编剧邹静之写的《女儿的作业》：女儿的作业要花很多时间来分析字，如“翁”是什么部首，它的第七画是点还是折……我曾对女儿说，你学会查字典就够了，字典是工具，而你不必成为工具。 . 　　何克抗所有的努力，就是为了不让孩子们成为工具。“我们的课堂，老师只关注怎么教，却很少有人关注学生怎么学。无论是课标还是老师，都认为孩子什么都不会，一遍遍地写、一遍遍地读、一遍遍地教，枯燥的重复往往让孩子们昏昏欲睡。”何克抗认为，这种机械的教学正在毁掉孩子们的想象力和观察力。 . 　　何克抗设计的语文课堂颠覆了以往先学生字、再阅读、再学写作的顺序，从学汉语拼音时，识字、阅读、写作就穿插进行，坚持下来，孩子们的阅读量和写作能力能大幅提高。 . 　　起初他选择在最好的学校里试验，但很快发现，锦上添花不是自己的目标。2003年起，他尝试把课题放到农村学校，那里的孩子条件更差，更需要优质的教育，更需要跨越式的改变。 . 　　最初的推广并不顺利。往往是何克抗还没解释完课题的内容，不少地方的教育局长先怕了：“一节课里老师只讲半节，这哪儿行？教学质量谁来保证？” . 　　少数试验校的老师也不适应。学生扩展阅读时睡着了，搞得老师不知所措；还有的老师压力大，几夜睡不着觉，满嘴起泡…… . 　　何克抗更是心急如焚，一年之中，除了给在校博士生上课，几乎所有的时间都在全国各地的试验区奔走，泡在农村小学课堂，与当地老师同吃同住，手把手地帮老师备课。西部学校条件艰苦，他也从不挑剔，饿了，就让老师做一盆方便面，边吃边讲。 . 　　13年来，何克抗的足迹遍布全国30多个试验区，北京的远郊区县、深圳的南山区、广州的越秀区、新疆库尔勒、河北丰宁、宁夏海原、甘肃成县……包括农村贫困地区在内，试验学校已发展到400多所，涉及学生6万余人。他曾经在一周之内完成了对北京、新疆、广东、湖北多地的调研，累计飞行两万公里。 . 　　老教授的努力终于有了回报。孩子们渐渐爱上了语文课，找回了观察力和想象力。西部山区一所小学的一年级学生甚至会自己编字谜——“渐”是水车千斤重，“棉”是树上挂着白毛巾…… . 　　在《四个太阳》这篇课文的写作环节，一个一年级孩子写道：“我想有个黑色的太阳，黑黑的太阳能把奶奶的头发晒黑。” . 　　孩子们发自内心的表达，让何克抗欣慰。学习负担没有加重，但孩子们的识字量和阅读量惊人“跨越”。试验一年后，二年级的孩子能认读3000多个常用汉字，仅课内阅读就能达到八九十万字，平均能写出超过150字的段落，若在网络环境下，学生们甚至可以用电脑敲出300字以上的文章。这几乎是教育部课标要求的一倍。 . 　 “中国的语文教育多年来存在三大问题。”何克抗后来总结道。一是过分强调语文学科的工具性而忽视其人文性，二是过分强调标准化考试而窒息学生的创造性思维，三是过分强调写作技巧的训练而忽视对学生观察力、想象力的培养。他服膺老一辈语文特级教师于漪的话——“学语文就是学做人，伴随着语言文字的读、写、听、说训练，渗透着认知教育、情感教育和人格教育。母语不是单纯的语言符号系统，而是牵系着一个民族的灵魂。” . 在何克抗看来，这就是语文学科的人文性，不认清这种人文性，只片面强调语文的工具性，用手术刀对文章肢解，留在学生脑海的就只能是鸡零狗碎的符号。这样做的后果是，“把学生的思维捆绑住了，把活生生的学生变成机器人，把学生的个性、灵气都给打掉了”。从上世纪9年代末开始，何克抗就下决心要把孩子们的创造性和人文性找回来。2000年，他在深圳找了一所著名的实验学校，开始实践自己的跨越式理论。他发现，在语文课堂上引入拓展阅读和电脑打写之后，每逢看图写话，非试验班的学生往往只能写一两句，而试验班的学生能写出整个段落。到二年级，写科幻小说的都有了。2002年，何克抗又在广州市越秀区随机找了6所小学加入课题，此时211的模式已经基本成型。过去，人们认为一年级的学生不适合同时学语文和英语，担心这样容易把汉语拼音和英文字母搞混。结果何克抗的课题试验让学生的语文和英语两科同时实现了跨越式发展。母语能力方面，到二年级结束的时候，学生们已经完成2500字的读写识记，能写成千字文，并达到了每人120万字的阅读量。2004年，他又回到深圳，在南山区最偏远的半山坡上，找到白芒小学的校长。当时这所薄弱校96%的学生都是农民和打工者的孩子，在全区55所学校里总是倒数第一。参加试验后，仅用3年，该校总成绩就进入全区前10名。随后，河北省丰宁满族自治县也引入跨越式课题，实施时间从小学一年级一直延续到初中毕业。这是该课题首次在农村地区大规模推广。在各个课题试验区，家长和老师最关心的总是，“跨越式”之后，孩子的考试成绩怎么样。尽管何克抗本人并不看重这类功利性的指标，但他丝毫不担心这个。2007年6月，在北京市教委的支持下，课题组曾抽取延庆县的7个班、昌平区19个班为试验班，同时选取两所全国闻名的小学的部分班级作为对照组，开展了对比测试。相关数据显示，试验班的字词基础与阅读部分的平均分稍低于对照组，而作文的平均分则高于对照组。来自广州的一项类似调查显示，试验班字词基础、阅读、作文的平均分，均高于对照组，最终总分超出了12.22分。 . 历经10年的教育实践，如今，在北京的远郊区县、在深圳的南山区、在广州的越秀区、在新疆库尔勒、在河北丰宁、在宁夏海原、在甘肃成县„„由何克抗领衔的北京师范大学基础教育跨越式课题组，先后在全国建立了20多个试验区，试验学校也发展到250多所。 . 不少课题组成员建议，别再叫“跨越式”，而改称“同一起跑线”——这并不是说孩子们天生处在同一起点上，而是寄望，通过几年的实践能在某种程度上修正教育的不均衡，让发达地区的孩子和欠发达地区的孩子、城市娃和农村娃，起跑线能拉得近些、再近些。 .",
            "url": "/myblog/2020/06/09/%E8%B5%B0%E8%BF%91%E4%BD%95%E5%85%8B%E6%8A%97-%E5%AD%A6%E4%B9%A0%E4%BB%96%E7%9A%84%E8%B7%A8%E8%B6%8A%E5%BC%8F%E6%95%99%E5%AD%A6.html",
            "relUrl": "/2020/06/09/%E8%B5%B0%E8%BF%91%E4%BD%95%E5%85%8B%E6%8A%97-%E5%AD%A6%E4%B9%A0%E4%BB%96%E7%9A%84%E8%B7%A8%E8%B6%8A%E5%BC%8F%E6%95%99%E5%AD%A6.html",
            "date": " • Jun 9, 2020"
        }
        
    
  
    
        ,"post11": {
            "title": "林永隆教授的叮嚀(台大)",
            "content": "林永隆教授的叮嚀 . 　 . 系刊專訪同學要我寫一篇文章，我很爽快地答應，想了兩個月，決定以第三人稱來表達，請大家指教，也謝謝許巧芳同學幫忙打字。 . 林永隆教授于1987年秋加入本系，他曾任本系系主任三年(1994~1997)，當時系名從理學院資訊科學系改成電資院資訊工程學系。2001~2003年間他向學校請假到園區與友人合創了一家IC設計公司叫創意電子，他擔任CTO(技術長)，目前他90%時間在做教學、研究，其他時間擔任社團法人台灣積體電路設計學會的理事長等公益服務，他同時也是北京大學的榮譽教授。林教授出身雲林農村，目前與太太綺芸和兩個小孩住在學校宿舍，兒子郁智和各位同學一樣正在享受多采多姿的大一新鮮人生活，女兒郁珊正在接受升高中基測的殘酷考驗，同時熱烈地迷她的日本偶像團體。 . 林教授在大學部教授數位邏輯設計，在研究所則開IC設計技術相關課程。他一共指導畢業六十餘位博碩士生，大都在園區IC設計公司工作，少數幾位在矽谷，另有幾位在學術界。他目前實驗室中有十四位博碩士研究生，主要研究題目為Advanced Video Codec Design，也就是以硬體設計來實現高性能、低成本、低功耗的下一代視訊壓縮IC。 . 林教授很喜歡他的老師張佛千先生為清大寫的一副對聯「清風頌春融桃融李，華玉作尺成龍成鳳」。他認為大學教授是全世界最好的職業，天天在美麗的清華校園與菁英學生相處，一個教授就如一個小公司的CEO(執行長)，他要訂定方向(研究題目)，他要吸引好的人才(研究生)，他要找金主(國科會計畫)，他要管日常營運(盯研究生)，他還要推銷成果(發表論文、寫書、國內外到處演講)。把學術當事業好好地經營，實驗室的研究成果小則有助產業發展，大則廣為全球同行普遍引用，為學校、為國家帶來莫大光榮，參與研究的研究生因而獲得紮實的訓練，作為日後出類拔萃的本錢，老師豈不快哉。 . 林老師經常喜歡送給同學八個字 —「積極進取，與人為善」。他深信「A beautiful mind is a terrible thing to waste.」。清華有很多聰明的同學，很多厲害的老師。同學入了寶山切莫空手而歸，不要一天到晚抱怨這抱怨那，負面思維不會使任何事情變好，凡事都該為長遠打算。林老師認為一個學生出校門後的成就並不只靠專業技能，同樣重要的有敬業的態度、團隊合作的精神和溝通表達的能力，這些東西一直以來都沒有受到該有的重視，以致現今同學們大大不足。既知不足就要趕緊補救。 . 林老師建議大家多花工夫加強英文聽、說及寫的能力。學英文不是為考試而是要用。我們的英文教育太失敗了以致於連一流的台清交學生都把英文看成很可怕。其實一點都不難，找一片最喜歡慢節奏的好萊塢電影DVD，關掉字幕看完一遍，鐵定聽不懂，打開中文字幕再看一遍，再打開英文字幕多看幾遍，重複十來遍，大部分的同學就可以不需字幕就完全聽得懂。這樣只消一個週末就可以建立無比的信心，接下來再試第二部，就會發現簡單太多了。因為以前沒有機會練習，林老師個人本來英文很很爛，到美國留學時因為迷上看美式足球，才從看電視、聽收音機轉播及評論中體會出英文一點都不難，絕對可以百分之百都聽得懂。現今的資訊科技如此方便，林教授敢保證同學只要看爛五部DVD，人生一定大大不同(變彩色地!!)。在許多名校(如UCB，UIUC，MIT)的Web上都有許多資訊界大師演講的Video，同學有了好的功力就可以試試拿下來聽。林老師覺得那跟以前在國外留學時坐在台下聽講的感覺沒啥差別。聽過幾次以後同學就會更有信心去探索更寬廣更先進更有趣的知識。 . 接下來就要加強寫作能力，林教授覺得寫作能力好的同學，未來在職場上一定順利許多，所謂Effective Communication，每個人都要能夠恰到好處地與同事、上司、下屬、客戶、朋友溝通。我國工程師最明顯也最常被詬病的弱點就是documentation做的太差以致其作品、程式等無法為他人所用，顯現不出價值。林老師建議同學在校時要多寫作、多投稿、經由被Reject的痛苦過程來試煉自己的功力(很奇怪，本文卻是由同學給老師的Homework Assignment) 。養成經常用心閱讀、欣賞好文章的習慣一定有助同學的寫作功力。 . 人生路很長就如馬拉松，林老師建議同學把眼光，眼界放遠，不要先把自己看扁，也不要急著去賺錢，我們的一生當中有太多美妙的東西不是錢買的到的。許多不同的社會、不同的文化、不同的價值體系、不同的做事方式、不同的生活態度都值得我們去學習、借鏡、玩味、體會。因此林教授一向大力鼓勵同學盡可能找機會出國留學、當交換學生或派駐海外工作，這樣一定會比較辛苦但都會有豐富的收穫與甜美的回憶。 . 每個老師都有許多人生智慧等著和同學分享，林老師建議同學常找他聊聊，三五個人一起到柑仔店喝個下午茶就是很棒的事情。 .",
            "url": "/myblog/2020/06/09/%E6%9E%97%E6%B0%B8%E9%9A%86%E6%95%99%E6%8E%88%E7%9A%84%E5%8F%AE%E5%9A%80(%E5%8F%B0%E5%A4%A7).html",
            "relUrl": "/2020/06/09/%E6%9E%97%E6%B0%B8%E9%9A%86%E6%95%99%E6%8E%88%E7%9A%84%E5%8F%AE%E5%9A%80(%E5%8F%B0%E5%A4%A7).html",
            "date": " • Jun 9, 2020"
        }
        
    
  
    
        ,"post12": {
            "title": "何克抗 ：基础教育“跨越式教学”的实践",
            "content": "何克抗 ：基础教育“跨越式教学”的实践 . 来源:心得体会网 · 2020-01-27 14:42:01基础教育  何克抗  读何克抗教授的英语跨越式教学心得体会  . 自2001年起，国家在中小学推行新课程改革已经十年。伴随贯彻落实国家《教育中长期规划纲要》，中国教育正处在一个新的改革活跃期，以促进教育公平和提高教育质量为主，追求好的教育、理想的教育。借此，21世纪教育研究院(微博)联合新教育研究院、北京市西部阳光农村发展基金会等多家机构举办“新课堂、新教育”高峰论坛，聚集教育一线的课改精英和海内外知名教育专家，共同探讨交流课改经验，以期以民间视角探讨基础教育教学改革，推动我国基础教育质量的提升。论坛已经圆满结束，以下为论坛实录。这应该是中国教育界应该坚持，不能盲目跟西方以学生学习为中心。 . 自2001年起，国家在中小学推行新课程改革已经十年。伴随贯彻落实国家《教育中长期规划纲要》，中国教育正处在一个新的改革活跃期，以促进教育公平和提高教育质量为主，追求好的教育、理想的教育。借此，21世纪教育研究院(微博)联合新教育研究院、北京市西部阳光农村发展基金会等多家机构举办“新课堂、新教育”高峰论坛，聚集教育一线的课改精英和海内外知名教育专家，共同探讨交流课改经验，以期以民间视角探讨基础教育教学改革，推动我国基础教育质量的提升。论坛已经圆满结束，以下为论坛实录。 . 何克抗：很高兴有这个机会跟大家交流，我要讲五个方面，但是前边资料都有介绍，我只是简单说一说。 . 为什么我们做跨越式？90年代以来世界各国都把信息化作为制高点。大投入有没有大产出，实际没有给出明确的回答。我们做实验目的，从2000年开始希望给出明确回答，对学校来说，教育信息化应该学知识提升、学生综合素质提升都有显著作用。 . 一、跨越式试验目标。 . 语文小学开始做，通过两年学习，识字达到2500字以上，能写简单的文章，英语要词汇量、口语、听说能力达到初中以上水平。其他学科我们也有具体的跨越式目标，这样高的目的有没有可能实现。 . 二、模式方法。 . 关键有创新理论，有了创新理论才有模式和方法，这套创新理论涉及五个方面，信息化最核心怎么跟课程整合，还有怎么让老师有操作性，信息化创新人才的培养、创新思维的理论，多年来在语文论有显著成效。 . 具体操作的时候，我们关注两个方面，传统教学只关注老师发展，西方教育强调学生为中心，我们实际能够实现跨越式的目标，同时关注两个方面，用创新的理论模式方法去对老师进行系统的四个层面的培训，另外怎么把学生主动性、积极性、创造性调动起来，信息技术环境、信息化资源不仅成为老师教的工具，更重要成为学生自主学习、自主探究的认知工具、协作交流工具，我们关注目标教与学，而且落实到具体教学实践里边去，才取得这个效果。 . 三、实施效果。 . 是否有可能达到这个目标呢？我们有多种测试，比较典型的测试，比如第一个农村实验区，从04年开始做，曾经对语文、英语农村学校都做过全面的测试，确实能达到我们目标。07年的时候还做过从来没有人敢做的对比测验，6月份对北京远郊十几所农村学校，由东城、西城老师出题，同一个时间语文、英语测试，刚做完一年试验，在农村只上一年幼儿园师资生源很大差别情况下，一年能够让农村学校水平赶上城市水平。 . 二年级9月份拿广州远郊七八所学校，跟越秀名校比较，远郊学校总分高出10―12分左右。我们有一套自己全国新信息化管理模式和方法，而且我们这样跨越不光学生知识技能高速发展，我们更强调学生综合素质的提高，也就是我们实验班学生思想品德、人际关系、合作这方面总体比非实验班好的多。 . 这里有很多具体材料，上海电视台、湖南电视台都采访过我，我说不要光听我说，多年来强调减负，越减学生负担越重。传统理论方法解决不了教育问题，我们之所以做到，有一套全新理论指导下教学模式方法，语文我们有主体主导结合的211模式，英语强调交际111模式。 . 所有不增加学生负担，小学到四年级基本不布置课外作业，课外活动发展自己兴趣爱好，我们全部知识技能大幅度提升全部在课堂上40分钟提高效率完成，绝对不增加学生课业负担。具体测试材料都有我就不详细说了。 . 我希望更多代表能到我们现场去，包括湖南电视台、上海电视台采访我的时候，我都让他们到现场去，去看看老师们、听听老师们反映，看看学生能力是不是达到我们要求。还有今年10月份宁夏农村县区搞比较规模大省级现场会，欢迎更多代表到现场看。 . 四、试验过程。 . 03、04年这套模式比较成熟以后，开始向农村拓展，03年底建立第一个农民子弟学校，06、08年已经在中西部地区，包括宁夏、甘肃、新疆、安徽、云南十个农村县区超过100多所县区学校，从06年特别语文教育部分扩展香港、新加坡。 . 五、反思和建议 . 最后我想谈谈十年的探索，我的一些反思、感受和对基础教育的建议。反思两个方面，中国基础教育确实取得很大成绩，有些成绩有很大创新意义，但是也存在一些缺陷，有的缺陷相当严重。取得成绩大家有目共睹，普九达标、高等教育逐渐走向大众化等。我觉得比较有创新我们既要看到别人长处，也要保持传统优势，比如教育领域三个方面是自主创新，第一个创新是教育思想观念的创新，教育思想怎么实施教育根本思想，如果教育思想观念不明确、不改变就埋头进行教育方式方法改变，那只是埋头拉车不抬头看路，可能走到斜路去。随着多媒体网络普及倡导学生为中心观念，这个对我们国内有很大影响，以学生为中心有很好的一面，但是关注学生自主学习、自主探究，有利于创新人才的培养，但是缺点只关注学，而忽视老师的教，把老师教都看成负面，我是不赞成。我们传统讲的全是教，他的弊病只讲教不是学，但是他的好处有利于教师主导功能发挥、有利于老师监控整个教育进程、有利于因材施教，这些方面也是好的不能抛弃的东西。 . 所以90年代以来，以学生为中心口号喊的非常响亮，几乎成为最先进、最时髦的时候，我们国家有些学校并没有盲目跟风，而且保持清醒的头脑，虚心借鉴西方以学生为中心好的方面，吸纳我们传统以教为主，重教这个优势，但是也看到我们自身忽视学生自主学习不足，在这个方面从90年代形成主导主体相结合全新的教育思想。经过十多年证明，既要发挥教师主导作用，也要充分体现学生作为认知过程主体地位，两方面结合起来，哪方面缺乏都是有缺陷的，而实践证明这是最有效的教学思想，我认为是中国教育界的创新。 . 这应该是中国教育界应该坚持，不能盲目跟西方以学生学习为中心。教学观念也是，主导主体结合他的教学观念我们就是强调有意义传递不是机械灌输和教师指导下自主探究结合，讲授不一定机械，发现不一定有意义，关键能不能将当前新知跟旧知建立内在联系，帮助学生建立新旧知识练习就是有益的学习，我认为这正是当代西方教界在这方面很大的问题，至今西方著名教育家也是承认这一点，关键有意义讲授。我们要把有意义传递跟教师主导下自主探究相结合，当然到了中学或者大学，学生基础自学高了以后，教师主导作用可以适当减弱一下，自主探究也离不开老师主导，怎么抓住问题关键？另外探究要老师提供必要的工具资源。 .",
            "url": "/myblog/2020/06/09/%E4%BD%95%E5%85%8B%E6%8A%97-%E5%9F%BA%E7%A1%80%E6%95%99%E8%82%B2-%E8%B7%A8%E8%B6%8A%E5%BC%8F%E6%95%99%E5%AD%A6-%E7%9A%84%E5%AE%9E%E8%B7%B5.html",
            "relUrl": "/2020/06/09/%E4%BD%95%E5%85%8B%E6%8A%97-%E5%9F%BA%E7%A1%80%E6%95%99%E8%82%B2-%E8%B7%A8%E8%B6%8A%E5%BC%8F%E6%95%99%E5%AD%A6-%E7%9A%84%E5%AE%9E%E8%B7%B5.html",
            "date": " • Jun 9, 2020"
        }
        
    
  
    
        ,"post13": {
            "title": "欢迎使用（Jupyter）",
            "content": "&#20320;&#22909; . print(&quot;你好！欢迎使用！&quot;) . 你好！欢迎使用！ .",
            "url": "/myblog/jupyter/%E4%B8%AD%E6%96%87/%E6%AC%A2%E8%BF%8E/2020/04/14/%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8-Jupyter.html",
            "relUrl": "/jupyter/%E4%B8%AD%E6%96%87/%E6%AC%A2%E8%BF%8E/2020/04/14/%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8-Jupyter.html",
            "date": " • Apr 14, 2020"
        }
        
    
  
    
        ,"post14": {
            "title": "Fastpages汉化版使用说明",
            "content": "1 登录自己的github账户，访问：https://github.com/EasonQYS/fastpagesJupyter ，找到下面这个蓝色的字并点击， . . 在自己的账户下生成一个仓库（仓库名不能使用），用于运行网页。 . 2 稍等片刻（约30秒），你的github邮箱会收到一封邮件，指导你接下来的步骤。由于邮件是英文版，请参考README文档。 . 操作过程截图： . . . . 点击Add key后需要输入github密码。 . 3查看Actions，绿色对勾表示初始化完成。（这一步没有意义） . . 4在https://github.com/EasonQYS/fastpagesJupyter/settings settings页面下滑找到 . . 选择master branch，等待https://github.com/EasonQYS/fastpagesJupyter/actions 显示成功。 . 5如果运行正常，会生成一个新的branch，名为gh-pages。需要将网页改至该路径。（若干没有，可以先进行后续操作。稍后在回来做这一步） . . 至此，网站已经可以显示了。 . 6 修改_config.yml . 为了让页面显示更美观，以及修改超链接为正确内容，我们可能要做一下修改。 . 需要修改的部分均已给出中文标注。 . 相关修改参考见截图 . . 若要修改网页标题，则修改 . . 若要修改网页内容，则修改index.html文件。 . 现在网页正常显示了。 . 7 如果没有做第5步，现在做。做完后网站正常显示。 . . 8 上传Jupyter文件 . 所有ipynb文件都在_notebooks目录下，其中的readme要求命名格式为YYYY-MM-DD-*.ipynb，注意，很容易忘记最后一个破折号。 . 但是也有要求，第一个单元格内要以Markdown形式写： . . . 写完上传至_notebooks目录。如果是本地克隆文件夹，那么记得同步至github云端。 . 上传之后等待一段时间，即可在博客上看到这篇文章。 . 9 类似的，Markdown文件在_posts目录下，也能自动转换。 . 同样，有格式要求。（支持中文名） . 当然，少一点也行，这是一个例子： . 在_posts目录下创建正确命名的md文档，写入后保存。若在本地写好，记得同步（克隆）至云端。 . -– . layout: post . title: “Welcome to Jekyll!” . -– . # Welcome . **Hello world**, this is my first Jekyll blog post. . I hope you like it! . 10 此外，_docs还能转换docx文件，方法类似。 . 将文档上传至/_docs目录下即可。 . 11 删帖，删除上述文件即可。 . 遇到的坑： . 1、md文档可以转博客，但是rst文档好像不行。解决方案，将rst文件重命名时后缀改为md。 . 2、若上传多个文档，其中一个报错，同批所有文档都不显示。故每次上传一个文档为佳，利于排查。每个文档生成网页的时间大约在2分钟左右。需要等待至Action成绿色√才表示完成，可以查看网页。 . . 3、可加载网页图片，但不能加载本地图片（文档中自带的图片）。例如下图方式添加的图片不能显示。 . .",
            "url": "/myblog/2020/04/14/fastpages%E6%B1%89%E5%8C%96%E7%89%88%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.html",
            "relUrl": "/2020/04/14/fastpages%E6%B1%89%E5%8C%96%E7%89%88%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.html",
            "date": " • Apr 14, 2020"
        }
        
    
  
    
        ,"post15": {
            "title": "欢迎（ms Word）",
            "content": "欢迎你 . 欢迎你 . 欢迎你 . 欢迎你 . .",
            "url": "/myblog/2020/04/13/%E6%AC%A2%E8%BF%8E-MS-Word.html",
            "relUrl": "/2020/04/13/%E6%AC%A2%E8%BF%8E-MS-Word.html",
            "date": " • Apr 13, 2020"
        }
        
    
  
    
        ,"post16": {
            "title": "欢迎使用Jekyll!（Markdown）",
            "content": "Jekyll博客将从这里开始. . 希望你喜欢! .",
            "url": "/myblog/2020/04/12/%E4%BD%A0%E5%A5%BD.html",
            "relUrl": "/2020/04/12/%E4%BD%A0%E5%A5%BD.html",
            "date": " • Apr 12, 2020"
        }
        
    
  
    
        ,"post17": {
            "title": "虚谷号jupyter入门教程",
            "content": "虚谷号Jupyter入门教程 . 1.1 什么是Jupyter . Jupyter的全称为Jupyter Notebook（此前被称为IPython notebook），是一个交互式笔记本，支持运行40多种编程语言。通过Jupyter，可以通过Web页面在虚谷号上运行Python代码和Linux命令。虚谷号的无线模式主要采用Jupyter来实现。 . Jupyter的本质是一个Web应用程序，便于创建和共享程序文档，支持实时代码，数学方程，可视化和Markdown。很多人喜欢直接在Jupyter上写代码，并同步记录学习心得，这样的学习笔记实际上就是一个很好的教程。 . 1.2 Jupyter快速入 . 1）访问Jupyter . 看到了这个文件，相信你已经打开了虚谷号的Jupyter。请使用谷歌浏览器（或者使用谷歌浏览器内核的浏览器）访问Jupyter。虚谷号的Wi-Fi有记忆功能，一般来说IP地址是不会变化的。当Wi-Fi信息设置好后，只要提供电源和Wi-Fi信号，就能使用Jupyter来访问虚谷号。 . 2）浏览Jupyter笔记 . 虚谷号上提供了很多学习笔记，默认放在“vvBoardbook”文件夹中。通过浏览这些学习笔记，可以快速掌握Python代码，了解虚谷号的基本功能。 . . 这些学习笔记中，有文字、图片还有Python代码。笔记中的代码可以即时编辑，还可以在线执行，并且能够返回运行结果。 . 用鼠标选中代码输入框（jupyter中称为“单元格”），单元格出现蓝色或者绿色边框，表示被选中。在菜单中选择“执行”命令，单元格的下方将出现单元格代码执行效果。执行完毕后，“in [ ]”中的括号将出现一个数字，表示单元格代码运行的次序。 . . 1.3 Jupyter可以做什么 . 1）学习Python编程 . Jupyter被誉为最好用的Python IDE之一，用来调试Python事半功倍。还可以在网页上显示虚谷号的传感器数值、摄像头内容等等。其实Jupyter不仅仅支持Python，还支持多种语言，这需要另外安装插件。 . 通过“新建”-“Python3”，即可新建一个笔记。 . 2）运行Linux命令 . 通过“新建”-“终端”，即可打开Web界面的终端。 . . 在仿真的终端页面，Jupyter几乎支持所有的命令，如安装软件、安装Python库文件、运行Python程序等。当关闭窗口后，再次打开，还能够看到之前的命令运行状态。 . 通过终端页面，还能够看到一共有几个命令窗口在运行。在不同电脑登陆Jupyter，可以共享这一界面，尤其适用于教学。 . 3）管理虚谷号 . Jupyter支持文件的上传和下载，新建文件、文件夹，删除、改名等操作，可以用来管理虚谷号的文件资源，可以安装各种库、软件等等。 . 1.4 Jupyter的代码调试技巧 . 1）如何快速运行指定的代码？ . Jupyter单元格中的代码，可以按照任意次序进行执行。Jupyter提供了多种执行代码的方式，在“单元格”菜单中。分为：运行所有单元格、运行所有、运行上面的代码块、运行下面的代码块等。 . 在调试代码的过程中，稍微复杂些的代码，往往需要全部重启，好查看程序的整体效果。如在测试GPIO的代码时，之前的代码对后面的代码会产生影响，这就需要重启服务。具体的功能在“服务”菜单中。可以选择“重启 &amp; 清空输入”、“重启 &amp; 运行所有” . 2.为什么打开笔记的时候，所有的代码都已经运行了？ . Jupyter笔记会保留代码运行的状态，打开一个笔记往往会看到很多的输出信息。如何让这些信息消失，保持代码的未运行状态？那就需要在关闭笔记前，执行“重启 &amp; 清空输入”，然后保存退出。 . 3.为什么打开多个笔记后Iupyter的运行速度变慢？ . 打开Iupyter的笔记，关闭页面并不能结束程序运行，还会有线程在单独运行，占用虚谷号的内存。当打开较多的程序，直接使用关闭页面的方式来关闭笔记，可能会导致内存不够用而死机。创客版的内存比教育版小，感觉会比较明显。 . 避免这种情况最好方法便是彻底结束程序运行。结束程序的方法如下：1、运行完程序，需要结束则在程序的页面选择“服务”-“关闭”。2、关闭程序的页面，看到程序的目录刚运行的程序呈绿色，并且显示运行，勾选前面的小方框，在选择出现的黄色的关闭选项，即可结束程序的运行。3、点击Jupyter的“运行”，会看到当前在运行的终端和笔记，逐个关闭即可。 . 1.5 如何用Jupyter写笔记 . Jupyter的笔记中既可以插入代码，也可以用MarkDown语法排版的文字。 . MarkDown教程：https://baike.baidu.com/item/markdown/3245829?fr=aladdin . Jupyter支持用“CTRL+C”的形式插入图片。 . 1.6 关于Jupyter的常见问题 . 1）除了虚谷号内置的笔记，还有其他的笔记吗？ . 虚谷号团队在不断编写学习笔记，除此之外，在网上能够找到很多jupyter学习笔记（扩展名为ipynb），如jupyter的官方网站。（https://nbviewer.jupyter.org/）。 . 2）可以多人一起使用Jupyter吗？ . 可以。甚至可以多人共同编辑一个笔记。。 . 3）Jupyter的笔记能不能导出来？ . 当然可以，Jupyter的笔记能够导出很多种格式，如py、pdf、html等等。 . 4）在Jupyter上，如何做交互，比如输入字符之类。 . 不仅可以直接在网页上输入，还能够利用Jupyter的网页小控件，做文本框、选择框等。图片也可以直接显示在网页上。 .",
            "url": "/myblog/2020/04/10/%E8%99%9A%E8%B0%B7%E5%8F%B7Jupyter%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html",
            "relUrl": "/2020/04/10/%E8%99%9A%E8%B0%B7%E5%8F%B7Jupyter%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html",
            "date": " • Apr 10, 2020"
        }
        
    
  
    
        ,"post18": {
            "title": "GitHub Actions: Providing Data Scientists With New Superpowers",
            "content": "What Superpowers? . Hi, I’m Hamel Husain. I’m a machine learning engineer at GitHub. Recently, GitHub released a new product called GitHub Actions, which has mostly flown under the radar in the machine learning and data science community as just another continuous integration tool. . Recently, I’ve been able to use GitHub Actions to build some very unique tools for Data Scientists, which I want to share with you today. Most importantly, I hope to get you excited about GitHub Actions, and the promise it has for giving you new superpowers as a Data Scientist. Here are two projects I recently built with Actions that show off its potential: . fastpages . fastpages is an automated, open-source blogging platform with enhanced support for Jupyter notebooks. You save your notebooks, markdown, or Word docs into a directory on GitHub, and they automatically become blog posts. Read the announcement below: . Machine Learning Ops . Wouldn’t it be cool if you could invoke a chatbot natively on GitHub to test your machine learning models on the infrastructure of your choice (GPUs), log all the results, and give you a rich report back in a pull request so that everyone could see the results? You can with GitHub Actions! . Consider the below annotated screenshot of this Pull Request: . . A more in-depth explanation about the above project can be viewed in this video: . Using GitHub Actions for machine learning workflows is starting to catch on. Julien Chaumond, CTO of Hugging Face, says: . GitHub Actions are great because they let us do CI on GPUs (as most of our users use the library on GPUs not on CPUs), on our own infra! 1 . Additionally, you can host a GitHub Action for other people so others can use parts of your workflow without having to re-create your steps. I provide examples of this below. . A Gentle Introduction To GitHub Actions . What Are GitHub Actions? . GitHub Actions allow you to run arbitrary code in response to events. Events are activities that happen on GitHub such as: . Opening a pull request | Making an issue comment | Labeling an issue | Creating a new branch | … and many more | . When an event is created, the GitHub Actions context is hydrated with a payload containing metadata for that event. Below is an example of a payload that is received when an issue is created: . { &quot;action&quot;: &quot;created&quot;, &quot;issue&quot;: { &quot;id&quot;: 444500041, &quot;number&quot;: 1, &quot;title&quot;: &quot;Spelling error in the README file&quot;, &quot;user&quot;: { &quot;login&quot;: &quot;Codertocat&quot;, &quot;type&quot;: &quot;User&quot;, }, &quot;labels&quot;: [ { &quot;id&quot;: 1362934389, &quot;node_id&quot;: &quot;MDU6TGFiZWwxMzYyOTM0Mzg5&quot;, &quot;name&quot;: &quot;bug&quot;, } ], &quot;body&quot;: &quot;It looks like you accidently spelled &#39;commit&#39; with two &#39;t&#39;s.&quot; } . This functionality allows you to respond to various events on GitHub in an automated way. In addition to this payload, GitHub Actions also provide a plethora of variables and environment variables that afford easy to access metadata such as the username and the owner of the repo. Additionally, other people can package useful functionality into an Action that other people can inherit. For example, consider the below Action that helps you publish python packages to PyPi: . The Usage section describes how this Action can be used: . - name: Publish a Python distribution to PyPI uses: pypa/gh-action-pypi-publish@master with: user: __token__ password: ${{ secrets.pypi_password }} . This Action expects two inputs: user and a password. You will notice that the password is referencing a variable called secrets, which is a variable that contains an encrypted secret that you can upload to your GitHub repository. There are thousands of Actions (that are free) for a wide variety of tasks that can be discovered on the GitHub Marketplace. The ability to inherit ready-made Actions in your workflow allows you to accomplish complex tasks without implementing all of the logic yourself. Some useful Actions for those getting started are: . actions/checkout: Allows you to quickly clone the contents of your repository into your environment, which you often want to do. This does a number of other things such as automatically mount your repository’s files into downstream Docker containers. | mxschmitt/action-tmate: Proivdes a way to debug Actions interactively. This uses port forwarding to give you a terminal in the browser that is connected to your Actions runner. Be careful not to expose sensitive information if you use this. | actions/github-script: Gives you a pre-authenticated ocotokit.js client that allows you to interact with the GitHub API to accomplish almost any task on GitHub automatically. Only these endpoints are supported (for example, the secrets endpoint is not in that list). | . In addition to the aforementioned Actions, it is helpful to go peruse the official GitHub Actions docs before diving in. . Example: A fastpages Action Workflow . The best to way familiarize yourself with Actions is by studying examples. Let’s take a look at the Action workflow that automates the build of fastpages (the platform used to write this blog post). . Part 1: Define Workflow Triggers . blog, defined in ci.yaml. Like all Actions workflows, this is YAML file is located in the .github/workflows directory of the GitHub repo. . The top of this YAML file looks like this: . name: CI on: push: branches: - master pull_request: . This means that this workflow is triggered on either a push or pull request event. Furthermore, push events are filtered such that only pushes to the master branch will trigger the workflow, whereas all pull requests will trigger this workflow. It is important to note that pull requests opened from forks will have read-only access to the base repository and cannot access any secrets for security reasons. The reason for defining the workflow in this way is we wanted to trigger the same workflow to test pull requests as well as build and deploy the website when a PR is merged into master. This will be clarified as we step through the rest of the YAML file. . Part 2: Define Jobs . Next, we define jobs (there is only one in this workflow). Per the docs: . A workflow run is made up of one or more jobs. Jobs run in parallel by default. . jobs: build-site: if: ( github.event.commits[0].message != &#39;Initial commit&#39; ) || github.run_number &gt; 1 runs-on: ubuntu-latest steps: . The keyword build-site is the name of your job and you can name it whatever you want. In this case, we have a conditional if statement that dictates if this job should be run or not. We are trying to ensure that this workflow does not run when the first commit to a repo is made with the message ‘Initial commit’. The first variable in the if statement, github.event, contains a json payload of the event that triggered this workflow. When developing workflows, it is helpful to print this variable in order to inspect its structure, which you can accomplish with the following YAML: . - name: see payload run: | echo &quot;PAYLOAD: n${PAYLOAD} n&quot; env: PAYLOAD: ${{ toJSON(github.event) }} . Note: the above step is only for debugging and is not currently in the workflow. . toJson is a handy function that returns a pretty-printed JSON representation of the variable. The output is printed directly in the logs contained in the Actions tab of your repo. In this example, printing the payload for a push event will look like this (truncated for brevity): . { &quot;ref&quot;: &quot;refs/tags/simple-tag&quot;, &quot;before&quot;: &quot;6113728f27ae8c7b1a77c8d03f9ed6e0adf246&quot;, &quot;created&quot;: false, &quot;deleted&quot;: true, &quot;forced&quot;: false, &quot;base_ref&quot;: null, &quot;commits&quot;: [ { &quot;message&quot;: &quot;updated README.md&quot;, &quot;author&quot;: &quot;hamelsmu&quot; }, ], &quot;head_commit&quot;: null, } . Therefore, the variable github.event.commits[0].message will retrieve the first commit message in the array of commits. Since we are looking for situations where there is only one commit, this logic suffices. The second variable in the if statement, github.run_number is a special variable in Actions which: . [is a] unique number for each run of a particular workflow in a repository. This number begins at 1 for the workflow’s first run, and increments with each new run. This number does not change if you re-run the workflow run. . Therefore, the if statement introduced above: . if: ( github.event.commits[0].message != &#39;Initial commit&#39; ) || github.run_number &gt; 1 . Allows the workflow to run when the commit message is “Initial commit” as long as it is not the first commit. ( || is a logical or operator). . Finally, the line runs-on: ubuntu-latest specifies the host operating system that your workflows will run in. . Part 3: Define Steps . Per the docs: . A job contains a sequence of tasks called steps. Steps can run commands, run setup tasks, or run an Action in your repository, a public repository, or an Action published in a Docker registry. Not all steps run Actions, but all Actions run as a step. Each step runs in its own process in the runner environment and has access to the workspace and filesystem. Because steps run in their own process, changes to environment variables are not preserved between steps. GitHub provides built-in steps to set up and complete a job. . Below are the first two steps in our workflow: . - name: Copy Repository Contents uses: actions/checkout@master with: persist-credentials: false - name: convert notebooks and word docs to posts uses: ./_action_files . The first step creates a copy of your repository in the Actions file system, with the help of the utility action/checkout. This utility only fetches the last commit by default and saves files into a directory (whose path is stored in the environment variable GITHUB_WORKSPACE that is accessible by subsequent steps in your job. The second step runs the fastai/fastpages Action, which converts notebooks and word documents to blog posts automatically. In this case, the syntax: . uses: ./_action_files . is a special case where the pre-made GitHub Action we want to run happens to be defined in the same repo that runs this workflow. This syntax allows us to test changes to this pre-made Action when evaluating PRs by referencing the directory in the current repository that defines that pre-made Action. Note: Building pre-made Actions is beyond the scope of this tutorial. . The next three steps in our workflow are defined below: . - name: setup directories for Jekyll build run: | rm -rf _site sudo chmod -R 777 . - name: Jekyll build uses: docker://hamelsmu/fastpages-jekyll with: args: bash -c &quot;gem install bundler &amp;&amp; jekyll build -V&quot; env: JEKYLL_ENV: &#39;production&#39; - name: copy CNAME file into _site if CNAME exists run: | sudo chmod -R 777 _site/ cp CNAME _site/ 2&gt;/dev/null || : . The step named setup directories for Jekyll build executes shell commands that remove the _site folder in order to get rid of stale files related to the page we want to build, as well as grant permissions to all the files in our repo to subsequent steps. . The step named Jekyll build executes a docker container hosted by the Jekyll community on Dockerhub called jekyll/jekyll. For those not familiar with Docker, see this tutorial. The name of this container is called hamelsmu/fastpages-jekyll because I’m adding some additional dependencies to jekyll/jekyll and hosting those on my DockerHub account for faster build times2. The args parameter allows you to execute arbitrary commands with the Docker container by overriding the CMD instruction in the Dockerfile. We use this Docker container hosted on Dockerhub so we don’t have to deal with installing and configuring all of the complicated dependencies for Jekyll. The files from our repo are already available in the Actions runtime due to the first step in this workflow, and are mounted into this Docker container automatically for us. In this case, we are running the command jekyll build, which builds our website and places relevant assets them into the _site folder. For more information about Jekyll, read the official docs. Finally, the env parameter allows me to pass an environment variable into the Docker container. . The final command above copies a CNAME file into the _site folder, which we need for the custom domain https://fastpages.fast.ai. Setting up custom domains are outside the scope of this article. . The final step in our workflow is defined below: . - name: Deploy if: github.event_name == &#39;push&#39; uses: peaceiris/actions-gh-pages@v3 with: deploy_key: ${{ secrets.SSH_DEPLOY_KEY }} publish_dir: ./_site . The statement . if: github.event_name == &#39;push&#39; . uses the variable github.event_name to ensure this step only runs when a push event ( in this case only pushes to the master branch trigger this workflow) occur. . This step deploys the fastpages website by copying the contents of the _site folder to the root of the gh-pages branch, which GitHub Pages uses for hosting. This step uses the peaceiris/actions-gh-pages Action, pinned at version 3. Their README describes various options and inputs for this Action. . Conclusion . We hope that this has shed some light on how we use GitHub Actions to automate fastpages. While we only covered one workflow above, we hope this provides enough intuition to understand the other workflows in fastpages. We have only scratched the surface of GitHub Actions in this blog post, but we provide other materials below for those who want to dive in deeper. We have not covered how to host an Action for other people, but you can start with these docs to learn more. . Still confused about how GitHub Actions could be used for Data Science? Here are some ideas of things you can build: . Jupyter Widgets that trigger GitHub Actions to perform various tasks on GitHub via the repository dispatch event | Integration with Pachyderm for data versioning. | Integration with your favorite cloud machine learning services, such Sagemaker, Azure ML or GCP’s AI Platform. | . Related Materials . GitHub Actions official documentation | Hello world Docker Action: A template to demonstrate how to build a Docker Action for other people to use. | Awesome Actions: A curated list of interesting GitHub Actions by topic. | A tutorial on Docker for Data Scientists. | . Getting In Touch . Please feel free to get in touch with us on Twitter: . Hamel Husain @HamelHusain | Jeremy Howard @jeremyphoward | . . Footnotes . You can see some of Hugging Face’s Actions workflows for machine learning on GitHub &#8617; . | These additional dependencies are defined here, which uses the “jekyll build” command to add ruby dedpendencies from the Gemfile located at the root of the repo. Additionally, this docker image is built by another Action workflow defined here. &#8617; . |",
            "url": "/myblog/actions/markdown/2020/03/06/fastpages-actions.html",
            "relUrl": "/actions/markdown/2020/03/06/fastpages-actions.html",
            "date": " • Mar 6, 2020"
        }
        
    
  
    
        ,"post19": {
            "title": "Introducing fastpages",
            "content": ". We are very pleased to announce the immediate availability of fastpages. fastpages is a platform which allows you to create and host a blog for free, with no ads and many useful features, such as: . Create posts containing code, outputs of code (which can be interactive), formatted text, etc directly from Jupyter Notebooks; for instance see this great example post from Scott Hawley. Notebook posts support features such as: Interactive visualizations made with Altair remain interactive. | Hide or show cell input and output. | Collapsable code cells that are either open or closed by default. | Define the Title, Summary and other metadata via a special markdown cells | Ability to add links to Colab and GitHub automatically. | . | Create posts, including formatting and images, directly from Microsoft Word documents. | Create and edit Markdown posts entirely online using GitHub&#39;s built-in markdown editor. | Embed Twitter cards and YouTube videos. | Categorization of blog posts by user-supplied tags for discoverability. | ... and much more | . fastpages relies on Github pages for hosting, and Github Actions to automate the creation of your blog. The setup takes around three minutes, and does not require any technical knowledge or expertise. Due to built-in automation of fastpages, you don&#39;t have to fuss with conversion scripts. All you have to do is save your Jupyter notebook, Word document or markdown file into a specified directory and the rest happens automatically. Infact, this blog post is written in a Jupyter notebook, which you can see with the &quot;View on GitHub&quot; link above. . fast.ai have previously released a similar project called fast_template, which is even easier to set up, but does not support automatic creation of posts from Microsoft Word or Jupyter notebooks, including many of the features outlined above. . Because fastpages is more flexible and extensible, we recommend using it where possible. fast_template may be a better option for getting folks blogging who have no technical expertise at all, and will only be creating posts using Github&#39;s integrated online editor. . Setting Up Fastpages . The setup process of fastpages is automated with GitHub Actions, too! Upon creating a repo from the fastpages template, a pull request will automatically be opened (after ~ 30 seconds) configuring your blog so it can start working. The automated pull request will greet you with instructions like this: . . All you have to do is follow these instructions (in the PR you receive) and your new blogging site will be up and running! . Jupyter Notebooks &amp; Fastpages . In this post, we will cover special features that fastpages provides has for Jupyter notebooks. You can also write your blog posts with Word documents or markdown in fastpages, which contain many, but not all the same features. . Options via FrontMatter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # Title &gt; Awesome summary - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . All of the above settings are enabled in this post, so you can see what they look like! . the summary field (preceeded by &gt;) will be displayed under your title, and will also be used by social media to display as the description of your page. | toc: setting this to true will automatically generate a table of contents | badges: setting this to true will display Google Colab and GitHub links on your blog post. | comments: setting this to true will enable comments. See these instructions for more details. | author this will display the authors names. | categories will allow your post to be categorized on a &quot;Tags&quot; page, where readers can browse your post by categories. | . Markdown front matter is formatted similarly to notebooks. The differences between the two can be viewed on the fastpages README. . Code Folding . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . If you want to completely hide cells (not just collapse them), read these instructions. . Interactive Charts With Altair . Interactive visualizations made with Altair remain interactive! . We leave this below cell unhidden so you can enjoy a preview of syntax highlighting in fastpages, which uses the Dracula theme. . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;IMDB_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget IMDB_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | 6.1 | . 1 First Love, Last Rites | 10876.0 | 300000.0 | 6.9 | . 2 I Married a Strange Person | 203134.0 | 250000.0 | 6.8 | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | NaN | . 4 Slam | 1087521.0 | 1000000.0 | 3.4 | . Other Feautures . Images w/Captions . You can include markdown images with captions like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Of course, the caption is optional. . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . More Examples . This tutorial contains more examples of what you can do with notebooks. . How fastpages Converts Notebooks to Blog Posts . fastpages uses nbdev to power the conversion process of Jupyter Notebooks to blog posts. When you save a notebook into the /_notebooks folder of your repository, GitHub Actions applies nbdev against those notebooks automatically. The same process occurs when you save Word documents or markdown files into the _word or _posts directory, respectively. . We will discuss how GitHub Actions work in a follow up blog post. . Resources &amp; Next Steps . We highly encourage you to start blogging with fastpages! Some resources that may be helpful: . fastpages repo - this is where you can go to create your own fastpages blog! | Fastai forums - nbdev &amp; blogging category. You can ask questions about fastpages here, as well as suggest new features. | nbdev: this project powers the conversion of Jupyter notebooks to blog posts. | . If you end up writing a blog post using fastpages, please let us know on Twitter: @jeremyphoward, @HamelHusain. .",
            "url": "/myblog/fastpages/jupyter/2020/02/21/introducing-fastpages.html",
            "relUrl": "/fastpages/jupyter/2020/02/21/introducing-fastpages.html",
            "date": " • Feb 21, 2020"
        }
        
    
  
    
        ,"post20": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Footnotes . This is the footnote. &#8617; . |",
            "url": "/myblog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  
    
        ,"post21": {
            "title": "Microsoft Word Example Post",
            "content": "When writing a blog post with Microsoft Word – the filename becomes the title. In this case the file name is “2020-01-01-Microsoft-Word-Example-Post.docx”. . There is minimal support for Word documents in fastpages compared to Jupyter notebooks. Some known limitations: . alt text in Word documents are not yet supported by fastpages, and will break links to images. . | You can only specify front matter for Word documents globally. See the README for more details. . | . For greater control over the content produced from Word documents, you will need to convert Word to markdown files manually. You can follow the steps in this blog post, which walk you through how to use pandoc to do the conversion. Note: If you wish to customize your Word generated blog post in markdown, make sure you delete your Word document from the _word directory so your markdown file doesn’t get overwritten! . If your primary method of writing blog posts is Word documents, and you plan on always manually editing Word generated markdown files, you are probably better off using fast_template instead of fastpages. . The material below is a reproduction of this blog post, and serves as an illustrative example. . Maintaining a healthy open source project can entail a huge amount of toil. Popular projects often have orders of magnitude more users and episodic contributors opening issues and PRs than core maintainers capable of handling these issues. . Consider this graphic prepared by the NumFOCUS foundation showing the number of maintainers for three widely used scientific computing projects: . . We can see that across these three projects, there is a very low ratio maintainers to users. Fixing this problem is not an easy task and likely requires innovative solutions to address the economics as well as tools. . Due to its recent momentum and popularity, Kubeflow suffers from a similar fate as illustrated by the growth of new issues opened: . . Source: “TensorFlow World 2019, Automating Your Developer Workflow With ML” . Coincidentally, while building out end to end machine learning examples for Kubeflow, we built two examples using publicly available GitHub data: GitHub Issue Summarization and Code Search. While these tutorials were useful for demonstrating components of Kubeflow, we realized that we could take this a step further and build concrete data products that reduce toil for maintainers. . This is why we started the project kubeflow/code-intelligence, with the goals of increasing project velocity and health using data driven tools. Below are two projects we are currently experimenting with : . Issue Label Bot: This is a bot that automatically labels GitHub issues using Machine Learning. This bot is a GitHub App that was originally built for Kubeflow but is now also used by several large open source projects. The current version of this bot only applies a very limited set of labels, however we are currently A/B testing new models that allow personalized labels. Here is a blog post discussing this project in more detail. . | Issue Triage GitHub Action: to compliment the Issue Label Bot, we created a GitHub Action that automatically adds / removes Issues to the Kubeflow project board tracking issues needing triage. . | Together these projects allow us to reduce the toil of triaging issues. The GitHub Action makes it much easier for the Kubeflow maintainers to track issues needing triage. With the label bot we have taken the first steps in using ML to replace human intervention. We plan on using features extracted by ML to automate more steps in the triage process to further reduce toil. . Building Solutions with GitHub Actions . One of the premises of Kubeflow is that a barrier to building data driven, ML powered solutions is getting models into production and integrated into a solution. In the case of building models to improve OSS project health, that often means integrating with GitHub where the project is hosted. . We are really excited by GitHub’s newly released feature GitHub Actions because we think it will make integrating ML with GitHub much easier. . For simple scripts, like the issue triage script, GitHub actions make it easy to automate executing the script in response to GitHub events without having to build and host a GitHub app. . To automate adding/removing issues needing triage to a Kanban board we wrote a simple python script that interfaces with GitHub’s GraphQL API to modify issues. . As we continue to iterate on ML Models to further reduce toil, GitHub Actions will make it easy to leverage Kubeflow to put our models into production faster. A number of prebuilt GitHub Actions make it easy to create Kubernetes resources in response to GitHub events. For example, we have created GitHub Actions to launch Argo Workflows. This means once we have a Kubernetes job or workflow to perform inference we can easily integrate the model with GitHub and have the full power of Kubeflow and Kubernetes (eg. GPUs). We expect this will allow us to iterate much faster compared to building and maintaining GitHub Apps. . Call To Action . We have a lot more work to do in order to achieve our goal of reducing the amount of toil involved in maintaining OSS projects. If your interested in helping out here’s a couple of issues to get started: . Help us create reports that pull and visualize key performance indicators (KPI). https://github.com/kubeflow/code-intelligence/issues/71 . We have defined our KPI here: issue #19 | . | Combine repo specific and non-repo specific label predictions: https://github.com/kubeflow/code-intelligence/issues/70 . | . In addition to the aforementioned issues we welcome contributions for these other issues in our repo. .",
            "url": "/myblog/2020/01/01/Microsoft-Word-Example-Post.html",
            "relUrl": "/2020/01/01/Microsoft-Word-Example-Post.html",
            "date": " • Jan 1, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "关于我",
          "content": "这是 About（关于） 页面。 像其他页面一样, 这是用Markdown格式书写的。 . 此网站由 fastpages 1提供技术支持。 . 此网站由 EasonQYS 2提供汉化支持。 . 一个除了普通格式外还支持Jupyter的博客。 &#8617; . | 第一个中文汉化版本。 &#8617; . |",
          "url": "/myblog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "/myblog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}