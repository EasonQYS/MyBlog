<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="/myblog/feed.xml" rel="self" type="application/atom+xml" /><link href="/myblog/" rel="alternate" type="text/html" /><updated>2020-06-10T07:37:07-05:00</updated><id>/myblog/feed.xml</id><title type="html">Yik-shing’s Blog</title><subtitle>我的第一个Blog</subtitle><entry><title type="html">用github搭建一个“开源”的网站</title><link href="/myblog/2020/06/10/%E7%94%A8GitHub%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA-%E5%BC%80%E6%BA%90-%E7%9A%84%E7%BD%91%E7%AB%99.html" rel="alternate" type="text/html" title="用github搭建一个“开源”的网站" /><published>2020-06-10T00:00:00-05:00</published><updated>2020-06-10T00:00:00-05:00</updated><id>/myblog/2020/06/10/%E7%94%A8GitHub%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E2%80%9C%E5%BC%80%E6%BA%90%E2%80%9D%E7%9A%84%E7%BD%91%E7%AB%99</id><content type="html" xml:base="/myblog/2020/06/10/%E7%94%A8GitHub%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA-%E5%BC%80%E6%BA%90-%E7%9A%84%E7%BD%91%E7%AB%99.html">&lt;p&gt;用GitHub搭建一个“开源”的网站&lt;/p&gt;

&lt;p&gt;浙江省温州中学 谢作如&lt;/p&gt;

&lt;p&gt;中国石油大学（华东） 邱奕盛&lt;/p&gt;

&lt;p&gt;学科关键词：技术、艺术&lt;/p&gt;

&lt;p&gt;随着安卓智能手机的普及，“开源”这一新名词逐步被大众接受。除了安卓、Linux等大家比较熟悉的开源系统和软件外，开源家族中还有“开源硬件”。创客教育中的造物神器Arduino、掌控板就是典型代表。2017年教育部发布的普通高中信息技术课标中，还增加了一个叫做《开源硬件项目设计》的模块，重点普及“开源”思想，引导学生“理解并自觉践行开源的理念与知识分享的精神”。&lt;/p&gt;

&lt;p&gt;如何与更多人一起分享自己的学习心得？除了在一些公共平台发表文章心得外，做网站肯定是一个重要的途径。但对很多人来说，做网站似乎是一个很专业的技能，尤其是还会涉及到域名购买、解析，空间租借之类，还要申请各种认证。其实做一个网站并没有这么难，只要会用GitHub就可以了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/2020-06-10-用GitHub搭建一个“开源”的网站/media/image2.png&quot; alt=&quot;手机屏幕截图 描述已自动生成&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图 1 GitHub网站&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;一、用GitHub建站的可行性分析&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;对IT方面有点兴趣的人大部分都知道，Github是全球最大的代码共享平台。准确地说，Github是一个面向开源及私有软件项目的托管平台。除了提供对Git（一个开源的分布式版本控制系统）的支持外，Github还提供了很多有趣的功能，GitHub Pages就是其中一个。&lt;/p&gt;

&lt;p&gt;选择GitHub Pages的理由一般有如下三个：&lt;/p&gt;

&lt;p&gt;1.使用方便: GitHub Pages 集成在 GitHub中, 直接和代码管理绑定在一起, 随着代码更新自动重新部署, 使用非常方便。&lt;/p&gt;

&lt;p&gt;2.免费: GitHub免费提供了username.github.io的域名, GitHub就成了免费的静态网站服务器。&lt;/p&gt;

&lt;p&gt;3.无数量限制: GitHub Pages没有使用的数量限制, 每一个Repository（仓库）都可以部署为一个静态网站。&lt;/p&gt;

&lt;p&gt;当然，如果仅仅是发布静态网站，那更新网站也会成为一项非常无趣的工作。最近GitHub的程序员发布了FastPages的工具，能够将文档直接转换为网页，还支持Word、MarkDown和Jupyter等类型。这个功能一发布就受到很多用户的关注，有人还用来制作了与新冠病毒相关的网站。因为这样一来，我们只要按照规范上传各种文档，网站主页自动会进行更新，看起来和个人博客就没有区别了。重要的是，这个博客是没有任何广告的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/2020-06-10-用GitHub搭建一个“开源”的网站/media/image3.png&quot; alt=&quot;手机屏幕截图 描述已自动生成&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图2 用FastPages生成的网站&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;二、建立GitHub Pages的步骤介绍&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;要建立一个GitHub Pages，第一步自然是要注册一个GitHub用户了。有了用户后，只要建一个名称为“username.github.io”的Repository（仓库），如我的用户名是“xiezuoru”，这个库的名称就是“xiezuoru.github.io”。然后，在这个Repository的根目录下建一个名称为“index.html”的文件，输入HTML代码，主页就产生了。访问“xiezuoru.github.io”，就可以看到这个主页的效果了。&lt;/p&gt;

&lt;p&gt;如何设计一个精美的网站，这需要一定的审美能力。如果对HTML语言不熟悉，最简单的办法就是用Word，虽然不太好看，毕竟也是可以用的。如果要上传多个文件，推荐用GitHub客户端工具。我呢，就借鉴了一个博客的外观设计，做一个很简单的页面，如图所示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/2020-06-10-用GitHub搭建一个“开源”的网站/media/image4.png&quot; alt=&quot;手机屏幕截图 描述已自动生成&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图 3 谢作如的GitHub Pages&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;三、利用FastPages实现自动转换文档&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;要实现自动转换文档为网页，还需要建一个具备“FastPages”功能的仓库。这个仓库不能自己建立，也不能用“fork”功能来产生，而是要通过一个特定的仓库“generate”（生成）。&lt;/p&gt;

&lt;p&gt;具备FastPages 功能的原始仓库是“fastai/fastpages”，访问地址为https://github.com/fastai/fastpages。考虑到“fastai/fastpages”是英文版，我们特意汉化了一个仓库，名称为“EasonQYS/fastpagesJupyter”，访问地址为：https://github.com/EasonQYS/fastpagesJupyter/&lt;/p&gt;

&lt;p&gt;在这个地址的后面加上“generate”，即https://github.com/EasonQYS/fastpagesJupyter/generate。或者在“这个链接”处点击。然后在跳出的页面中，给这个仓库起一个名称，名称没有规定，只要不使用“username.github.io”这一名称就可以。&lt;/p&gt;

&lt;p&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/2020-06-10-用GitHub搭建一个“开源”的网站/media/image5.png&quot; alt=&quot;手机屏幕截图 描述已自动生成&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图4 Fastpages的中文版本&lt;/p&gt;

&lt;p&gt;仓库建立成功后，大约30秒左右，你注册GitHub的邮箱会收到一封英文邮件。按照邮件的要求，生成一对SSH密钥，分别填写在指定的网页中。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/2020-06-10-用GitHub搭建一个“开源”的网站/media/image6.png&quot; alt=&quot;手机屏幕截图 描述已自动生成&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图 5 收到的英文邮件&lt;/p&gt;

&lt;p&gt;密钥填写成功后，访问“username.github.io/repositoryname”就能看到这个新主页了，如我的FastPages地址就是&lt;a href=&quot;https://xiezuoru.github.io/blog/&quot;&gt;&lt;span class=&quot;underline&quot;&gt;https://xiezuoru.github.io/blog/&lt;/span&gt;&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/2020-06-10-用GitHub搭建一个“开源”的网站/media/image7.png&quot; alt=&quot;手机屏幕截图 描述已自动生成&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图6 默认的主页效果&lt;/p&gt;

&lt;p&gt;修改仓库根目录下的“index.html”文件，即可修改主页的效果。其中自动更新的文件标题会出现在“最新博文”的下方，而“关于我”、 “查找”、“标签”这几个网页，要在“_pages”文件中修改。关于这个网站的基本信息，请修改“_config.yml”文件。&lt;/p&gt;

&lt;p&gt;那么，如何上传文档自动更新主页呢？其实很简单，只要将文件按“年-月-日-标题”的格式命名，上传到相应的文件夹下即可，如“2020-04-01-虚谷计划简介.docx”。其中，Word文件要上传到“_word”文件夹，MarkDown格式和网页格式的文档，要上传到“_posts”文件夹中，Jupyter文件则要上传到“_notebooks”文件夹。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;四、我的建站实践——虚谷计划网站&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;按照这样的方式，我们给虚谷计划建立了一个网站。先建立一个名为“vvplan”的organization（组织），然后建一个名为“vvplan.github.io”的仓库。考虑到访问方便，我设置了CNAME（别名），将域名&lt;a href=&quot;http://www.vvplan.cn&quot;&gt;www.vvplan.cn&lt;/a&gt;指向到这里。&lt;/p&gt;

&lt;p&gt;虚谷计划下面有四个项目，我也分别建立了四个具备FastPages功能的仓库，逐一填写密钥，然后邀请虚谷计划组委会的成员加入。更新网站，也可以像GitHub中的其他项目开发也样，采用协同工作的形式，权限设置非常灵活。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/2020-06-10-用GitHub搭建一个“开源”的网站/media/image8.png&quot; alt=&quot;手机截图图社交软件的信息 描述已自动生成&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图 7 基于GitHub Pages建的虚谷计划网站&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;五、结语&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Git Hub Pages是“开源”的，如果有人喜欢你的网站结构或者内容，只要按下“fork”，就能将你的网站clone（克隆）一份。这样一来，就有越来越多的人从这样的分享过程中受益。&lt;/p&gt;

&lt;p&gt;除此之外，你还能从这个建站的过程中深刻理解文档格式，体会到标记语言（HTML 、Mark Down、XML、JSON 和YAML等）在信息交流中的重要意义。&lt;/p&gt;

&lt;p&gt;这些文档的转换，都是用Python脚本代码来完成的，还可以研究转换脚本，感受Pyt hon的强大功能。&lt;/p&gt;

&lt;p&gt;当然，最重要的收获是协同共建的机制，Git Hub能够记录所有用户的操作，分布式的开发和集中式的管理，让协同开发变得有序而灵活。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-06-10-用GitHub搭建一个“开源”的网站/media/image9.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">用GitHub搭建一个“开源”的网站</summary></entry><entry><title type="html">林永隆教授的叮嚀(台大)</title><link href="/myblog/2020/06/09/%E6%9E%97%E6%B0%B8%E9%9A%86%E6%95%99%E6%8E%88%E7%9A%84%E5%8F%AE%E5%9A%80(%E5%8F%B0%E5%A4%A7).html" rel="alternate" type="text/html" title="林永隆教授的叮嚀(台大)" /><published>2020-06-09T00:00:00-05:00</published><updated>2020-06-09T00:00:00-05:00</updated><id>/myblog/2020/06/09/%E6%9E%97%E6%B0%B8%E9%9A%86%E6%95%99%E6%8E%88%E7%9A%84%E5%8F%AE%E5%9A%80(%E5%8F%B0%E5%A4%A7)</id><content type="html" xml:base="/myblog/2020/06/09/%E6%9E%97%E6%B0%B8%E9%9A%86%E6%95%99%E6%8E%88%E7%9A%84%E5%8F%AE%E5%9A%80(%E5%8F%B0%E5%A4%A7).html">&lt;p&gt;林永隆教授的叮嚀&lt;/p&gt;

&lt;p&gt;　&lt;/p&gt;

&lt;p&gt;系刊專訪同學要我寫一篇文章，我很爽快地答應，想了兩個月，決定以第三人稱來表達，請大家指教，也謝謝許巧芳同學幫忙打字。&lt;/p&gt;

&lt;p&gt;林永隆教授于1987年秋加入本系，他曾任本系系主任三年(1994~1997)，當時系名從理學院資訊科學系改成電資院資訊工程學系。2001~2003年間他向學校請假到園區與友人合創了一家IC設計公司叫創意電子，他擔任CTO(技術長)，目前他90%時間在做教學、研究，其他時間擔任社團法人台灣積體電路設計學會的理事長等公益服務，他同時也是北京大學的榮譽教授。林教授出身雲林農村，目前與太太綺芸和兩個小孩住在學校宿舍，兒子郁智和各位同學一樣正在享受多采多姿的大一新鮮人生活，女兒郁珊正在接受升高中基測的殘酷考驗，同時熱烈地迷她的日本偶像團體。&lt;/p&gt;

&lt;p&gt;林教授在大學部教授數位邏輯設計，在研究所則開IC設計技術相關課程。他一共指導畢業六十餘位博碩士生，大都在園區IC設計公司工作，少數幾位在矽谷，另有幾位在學術界。他目前實驗室中有十四位博碩士研究生，主要研究題目為Advanced Video Codec Design，也就是以硬體設計來實現高性能、低成本、低功耗的下一代視訊壓縮IC。&lt;/p&gt;

&lt;p&gt;林教授很喜歡他的老師張佛千先生為清大寫的一副對聯「清風頌春融桃融李，華玉作尺成龍成鳳」。他認為大學教授是全世界最好的職業，天天在美麗的清華校園與菁英學生相處，一個教授就如一個小公司的CEO(執行長)，他要訂定方向(研究題目)，他要吸引好的人才(研究生)，他要找金主(國科會計畫)，他要管日常營運(盯研究生)，他還要推銷成果(發表論文、寫書、國內外到處演講)。把學術當事業好好地經營，實驗室的研究成果小則有助產業發展，大則廣為全球同行普遍引用，為學校、為國家帶來莫大光榮，參與研究的研究生因而獲得紮實的訓練，作為日後出類拔萃的本錢，老師豈不快哉。&lt;/p&gt;

&lt;p&gt;林老師經常喜歡送給同學八個字 —「積極進取，與人為善」。他深信「A beautiful mind is a terrible thing to waste.」。清華有很多聰明的同學，很多厲害的老師。同學入了寶山切莫空手而歸，不要一天到晚抱怨這抱怨那，負面思維不會使任何事情變好，凡事都該為長遠打算。林老師認為一個學生出校門後的成就並不只靠專業技能，同樣重要的有敬業的態度、團隊合作的精神和溝通表達的能力，這些東西一直以來都沒有受到該有的重視，以致現今同學們大大不足。既知不足就要趕緊補救。&lt;/p&gt;

&lt;p&gt;林老師建議大家多花工夫加強英文聽、說及寫的能力。學英文不是為考試而是要用。我們的英文教育太失敗了以致於連一流的台清交學生都把英文看成很可怕。其實一點都不難，找一片最喜歡慢節奏的好萊塢電影DVD，關掉字幕看完一遍，鐵定聽不懂，打開中文字幕再看一遍，再打開英文字幕多看幾遍，重複十來遍，大部分的同學就可以不需字幕就完全聽得懂。這樣只消一個週末就可以建立無比的信心，接下來再試第二部，就會發現簡單太多了。因為以前沒有機會練習，林老師個人本來英文很很爛，到美國留學時因為迷上看美式足球，才從看電視、聽收音機轉播及評論中體會出英文一點都不難，絕對可以百分之百都聽得懂。現今的資訊科技如此方便，林教授敢保證同學只要看爛五部DVD，人生一定大大不同(變彩色地!!)。在許多名校(如UCB，UIUC，MIT)的Web上都有許多資訊界大師演講的Video，同學有了好的功力就可以試試拿下來聽。林老師覺得那跟以前在國外留學時坐在台下聽講的感覺沒啥差別。聽過幾次以後同學就會更有信心去探索更寬廣更先進更有趣的知識。&lt;/p&gt;

&lt;p&gt;接下來就要加強寫作能力，林教授覺得寫作能力好的同學，未來在職場上一定順利許多，所謂Effective Communication，每個人都要能夠恰到好處地與同事、上司、下屬、客戶、朋友溝通。我國工程師最明顯也最常被詬病的弱點就是documentation做的太差以致其作品、程式等無法為他人所用，顯現不出價值。林老師建議同學在校時要多寫作、多投稿、經由被Reject的痛苦過程來試煉自己的功力(很奇怪，本文卻是由同學給老師的Homework Assignment) 。養成經常用心閱讀、欣賞好文章的習慣一定有助同學的寫作功力。&lt;/p&gt;

&lt;p&gt;人生路很長就如馬拉松，林老師建議同學把眼光，眼界放遠，不要先把自己看扁，也不要急著去賺錢，我們的一生當中有太多美妙的東西不是錢買的到的。許多不同的社會、不同的文化、不同的價值體系、不同的做事方式、不同的生活態度都值得我們去學習、借鏡、玩味、體會。因此林教授一向大力鼓勵同學盡可能找機會出國留學、當交換學生或派駐海外工作，這樣一定會比較辛苦但都會有豐富的收穫與甜美的回憶。&lt;/p&gt;

&lt;p&gt;每個老師都有許多人生智慧等著和同學分享，林老師建議同學常找他聊聊，三五個人一起到柑仔店喝個下午茶就是很棒的事情。&lt;/p&gt;</content><author><name></name></author><summary type="html">林永隆教授的叮嚀</summary></entry><entry><title type="html">走近何克抗 学习他的跨越式教学</title><link href="/myblog/2020/06/09/%E8%B5%B0%E8%BF%91%E4%BD%95%E5%85%8B%E6%8A%97-%E5%AD%A6%E4%B9%A0%E4%BB%96%E7%9A%84%E8%B7%A8%E8%B6%8A%E5%BC%8F%E6%95%99%E5%AD%A6.html" rel="alternate" type="text/html" title="走近何克抗  学习他的跨越式教学" /><published>2020-06-09T00:00:00-05:00</published><updated>2020-06-09T00:00:00-05:00</updated><id>/myblog/2020/06/09/%E8%B5%B0%E8%BF%91%E4%BD%95%E5%85%8B%E6%8A%97--%E5%AD%A6%E4%B9%A0%E4%BB%96%E7%9A%84%E8%B7%A8%E8%B6%8A%E5%BC%8F%E6%95%99%E5%AD%A6</id><content type="html" xml:base="/myblog/2020/06/09/%E8%B5%B0%E8%BF%91%E4%BD%95%E5%85%8B%E6%8A%97-%E5%AD%A6%E4%B9%A0%E4%BB%96%E7%9A%84%E8%B7%A8%E8%B6%8A%E5%BC%8F%E6%95%99%E5%AD%A6.html">&lt;p&gt;&lt;strong&gt;走近何克抗  学习他的跨越式教学&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;来源：&lt;/strong&gt;&lt;a href=&quot;http://blog.xxt.cn/showSingleArticle.action?artId=5959683&quot;&gt;http://blog.xxt.cn/showSingleArticle.action?artId=5959683&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;在《小学教学》上看过一篇有关何克抗先生的一篇叙事型报道，知道了这样一位投身中国教育，令人由衷钦佩的老者。在观看《我的人生我的课》时，又见到了这位老者。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;何克抗，今年76岁，是北京师范大学教育学部的教授，我国第一位教育技术学博士生导师，也是我国教育技术学科的开创者与奠基人之一。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;这位大教授，不爱在宁静的大学里待着，却专爱往偏僻的小学跑。有同行评价老先生：“大学请不动，小学不请自来。”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　二年级（3）班的语文课刚刚开始。孩子们见到何克抗，兴奋起来，“爷爷，坐我这儿吧！”何克抗的眼睛又眯成了一条缝儿，他走到教室的角落里坐下，冲语文老师段淑芬点了点头。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　这节课讲《雷雨》。按一般的课堂程序，老师会先把生字写出来，然后带着孩子们反复练习。而段淑芬则把主动权交给了学生。“哪些生字你们不会?”孩子们七嘴八舌，最后集中在“压、乱、垂、虹”。“那该怎么记这些字？”段淑芬再一次发问。何克抗笑着环视四周，期待着孩子们的回答。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　学生们你一言我一语，课堂一下热闹起来。“我用猜字谜的方法来记！‘压’是庄字一点在腰下！”“我来教大家记‘乱’，舌字长个小尾巴！”……一个胖胖的男孩涨红了脸，大声道：“我会记‘虹’，一只小虫在打工！”教室里笑声一片。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　认完了生字，段淑芬出人意料地让孩子们合上课本，拿出与课文匹配的阅读材料。何克抗看了看手腕上的表，“不错，刚好20分钟。”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　一节课40分钟，前20分钟用于老师与学生的互动教学，后20分钟用于读和写，其中10分钟扩展阅读，10分钟写课堂感想。这种“211”教学模式，正是何克抗设计的。过去的13年中，这位大教授奔波于全国各地的山村中小学，进行着“跨越式教学试验”，悄悄改革着语文课堂。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　《北京文学》曾刊登过一篇著名编剧邹静之写的《女儿的作业》：女儿的作业要花很多时间来分析字，如“翁”是什么部首，它的第七画是点还是折……我曾对女儿说，你学会查字典就够了，字典是工具，而你不必成为工具。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　何克抗所有的努力，就是为了不让孩子们成为工具。“我们的课堂，老师只关注怎么教，却很少有人关注学生怎么学。无论是课标还是老师，都认为孩子什么都不会，一遍遍地写、一遍遍地读、一遍遍地教，枯燥的重复往往让孩子们昏昏欲睡。”何克抗认为，这种机械的教学正在毁掉孩子们的想象力和观察力。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　何克抗设计的语文课堂颠覆了以往先学生字、再阅读、再学写作的顺序，从学汉语拼音时，识字、阅读、写作就穿插进行，坚持下来，孩子们的阅读量和写作能力能大幅提高。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　起初他选择在最好的学校里试验，但很快发现，锦上添花不是自己的目标。2003年起，他尝试把课题放到农村学校，那里的孩子条件更差，更需要优质的教育，更需要跨越式的改变。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　最初的推广并不顺利。往往是何克抗还没解释完课题的内容，不少地方的教育局长先怕了：“一节课里老师只讲半节，这哪儿行？教学质量谁来保证？”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　少数试验校的老师也不适应。学生扩展阅读时睡着了，搞得老师不知所措；还有的老师压力大，几夜睡不着觉，满嘴起泡……&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　何克抗更是心急如焚，一年之中，除了给在校博士生上课，几乎所有的时间都在全国各地的试验区奔走，泡在农村小学课堂，与当地老师同吃同住，手把手地帮老师备课。西部学校条件艰苦，他也从不挑剔，饿了，就让老师做一盆方便面，边吃边讲。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　13年来，何克抗的足迹遍布全国30多个试验区，北京的远郊区县、深圳的南山区、广州的越秀区、新疆库尔勒、河北丰宁、宁夏海原、甘肃成县……包括农村贫困地区在内，试验学校已发展到400多所，涉及学生6万余人。他曾经在一周之内完成了对北京、新疆、广东、湖北多地的调研，累计飞行两万公里。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　老教授的努力终于有了回报。孩子们渐渐爱上了语文课，找回了观察力和想象力。西部山区一所小学的一年级学生甚至会自己编字谜——“渐”是水车千斤重，“棉”是树上挂着白毛巾……&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　在《四个太阳》这篇课文的写作环节，一个一年级孩子写道：“我想有个黑色的太阳，黑黑的太阳能把奶奶的头发晒黑。”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　　孩子们发自内心的表达，让何克抗欣慰。学习负担没有加重，但孩子们的识字量和阅读量惊人“跨越”。试验一年后，二年级的孩子能认读3000多个常用汉字，仅课内阅读就能达到八九十万字，平均能写出超过150字的段落，若在网络环境下，学生们甚至可以用电脑敲出300字以上的文章。这几乎是教育部课标要求的一倍。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;　 “中国的语文教育多年来存在三大问题。”何克抗后来总结道。一是过分强调语文学科的工具性而忽视其人文性，二是过分强调标准化考试而窒息学生的创造性思维，三是过分强调写作技巧的训练而忽视对学生观察力、想象力的培养。他服膺老一辈语文特级教师于漪的话——“学语文就是学做人，伴随着语言文字的读、写、听、说训练，渗透着认知教育、情感教育和人格教育。母语不是单纯的语言符号系统，而是牵系着一个民族的灵魂。”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;在何克抗看来，这就是语文学科的人文性，不认清这种人文性，只片面强调语文的工具性，用手术刀对文章肢解，留在学生脑海的就只能是鸡零狗碎的符号。这样做的后果是，“把学生的思维捆绑住了，把活生生的学生变成机器人，把学生的个性、灵气都给打掉了”。从上世纪9年代末开始，何克抗就下决心要把孩子们的创造性和人文性找回来。2000年，他在深圳找了一所著名的实验学校，开始实践自己的跨越式理论。他发现，在语文课堂上引入拓展阅读和电脑打写之后，每逢看图写话，非试验班的学生往往只能写一两句，而试验班的学生能写出整个段落。到二年级，写科幻小说的都有了。2002年，何克抗又在广州市越秀区随机找了6所小学加入课题，此时211的模式已经基本成型。过去，人们认为一年级的学生不适合同时学语文和英语，担心这样容易把汉语拼音和英文字母搞混。结果何克抗的课题试验让学生的语文和英语两科同时实现了跨越式发展。母语能力方面，到二年级结束的时候，学生们已经完成2500字的读写识记，能写成千字文，并达到了每人120万字的阅读量。2004年，他又回到深圳，在南山区最偏远的半山坡上，找到白芒小学的校长。当时这所薄弱校96%的学生都是农民和打工者的孩子，在全区55所学校里总是倒数第一。参加试验后，仅用3年，该校总成绩就进入全区前10名。随后，河北省丰宁满族自治县也引入跨越式课题，实施时间从小学一年级一直延续到初中毕业。这是该课题首次在农村地区大规模推广。在各个课题试验区，家长和老师最关心的总是，“跨越式”之后，孩子的考试成绩怎么样。尽管何克抗本人并不看重这类功利性的指标，但他丝毫不担心这个。2007年6月，在北京市教委的支持下，课题组曾抽取延庆县的7个班、昌平区19个班为试验班，同时选取两所全国闻名的小学的部分班级作为对照组，开展了对比测试。相关数据显示，试验班的字词基础与阅读部分的平均分稍低于对照组，而作文的平均分则高于对照组。来自广州的一项类似调查显示，试验班字词基础、阅读、作文的平均分，均高于对照组，最终总分超出了12.22分。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;历经10年的教育实践，如今，在北京的远郊区县、在深圳的南山区、在广州的越秀区、在新疆库尔勒、在河北丰宁、在宁夏海原、在甘肃成县„„由何克抗领衔的北京师范大学基础教育跨越式课题组，先后在全国建立了20多个试验区，试验学校也发展到250多所。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;不少课题组成员建议，别再叫“跨越式”，而改称“同一起跑线”——这并不是说孩子们天生处在同一起点上，而是寄望，通过几年的实践能在某种程度上修正教育的不均衡，让发达地区的孩子和欠发达地区的孩子、城市娃和农村娃，起跑线能拉得近些、再近些。&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">走近何克抗  学习他的跨越式教学</summary></entry><entry><title type="html">何克抗 ：基础教育“跨越式教学”的实践</title><link href="/myblog/2020/06/09/%E4%BD%95%E5%85%8B%E6%8A%97-%E5%9F%BA%E7%A1%80%E6%95%99%E8%82%B2-%E8%B7%A8%E8%B6%8A%E5%BC%8F%E6%95%99%E5%AD%A6-%E7%9A%84%E5%AE%9E%E8%B7%B5.html" rel="alternate" type="text/html" title="何克抗 ：基础教育“跨越式教学”的实践" /><published>2020-06-09T00:00:00-05:00</published><updated>2020-06-09T00:00:00-05:00</updated><id>/myblog/2020/06/09/%E4%BD%95%E5%85%8B%E6%8A%97-:%E5%9F%BA%E7%A1%80%E6%95%99%E8%82%B2%E2%80%9C%E8%B7%A8%E8%B6%8A%E5%BC%8F%E6%95%99%E5%AD%A6%E2%80%9D%E7%9A%84%E5%AE%9E%E8%B7%B5</id><content type="html" xml:base="/myblog/2020/06/09/%E4%BD%95%E5%85%8B%E6%8A%97-%E5%9F%BA%E7%A1%80%E6%95%99%E8%82%B2-%E8%B7%A8%E8%B6%8A%E5%BC%8F%E6%95%99%E5%AD%A6-%E7%9A%84%E5%AE%9E%E8%B7%B5.html">&lt;p&gt;&lt;strong&gt;何克抗 ：基础教育“跨越式教学”的实践&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;来源:心得体会网 · 2020-01-27 14:42:01&lt;a href=&quot;https://www.zbflj.cn/tag/jichujiaoyu/&quot;&gt;&lt;span class=&quot;underline&quot;&gt;基础教育&lt;/span&gt;&lt;/a&gt;  &lt;a href=&quot;https://www.zbflj.cn/tag/hekekang/&quot;&gt;&lt;span class=&quot;underline&quot;&gt;何克抗&lt;/span&gt;&lt;/a&gt;  &lt;a href=&quot;https://www.zbflj.cn/tag/duhekekangjiaoshoudeyingyukuayueshijiaoxuexindetihui/&quot;&gt;&lt;span class=&quot;underline&quot;&gt;读何克抗教授的英语跨越式教学心得体会&lt;/span&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;自2001年起，国家在中小学推行新课程改革已经十年。伴随贯彻落实国家《教育中长期规划纲要》，中国教育正处在一个新的改革活跃期，以促进教育公平和提高教育质量为主，追求好的教育、理想的教育。借此，21世纪教育研究院(微博)联合新教育研究院、北京市西部阳光农村发展基金会等多家机构举办“新课堂、新教育”高峰论坛，聚集教育一线的课改精英和海内外知名教育专家，共同探讨交流课改经验，以期以民间视角探讨基础教育教学改革，推动我国基础教育质量的提升。论坛已经圆满结束，以下为论坛实录。这应该是中国教育界应该坚持，不能盲目跟西方以学生学习为中心。&lt;/p&gt;

&lt;p&gt;自2001年起，国家在中小学推行新课程改革已经十年。伴随贯彻落实国家《教育中长期规划纲要》，中国教育正处在一个新的改革活跃期，以促进教育公平和提高教育质量为主，追求好的教育、理想的教育。借此，21世纪教育研究院(微博)联合新教育研究院、北京市西部阳光农村发展基金会等多家机构举办“新课堂、新教育”高峰论坛，聚集教育一线的课改精英和海内外知名教育专家，共同探讨交流课改经验，以期以民间视角探讨基础教育教学改革，推动我国基础教育质量的提升。论坛已经圆满结束，以下为论坛实录。&lt;/p&gt;

&lt;p&gt;何克抗：很高兴有这个机会跟大家交流，我要讲五个方面，但是前边资料都有介绍，我只是简单说一说。&lt;/p&gt;

&lt;p&gt;为什么我们做跨越式？90年代以来世界各国都把信息化作为制高点。大投入有没有大产出，实际没有给出明确的回答。我们做实验目的，从2000年开始希望给出明确回答，对学校来说，教育信息化应该学知识提升、学生综合素质提升都有显著作用。&lt;/p&gt;

&lt;p&gt;一、跨越式试验目标。&lt;/p&gt;

&lt;p&gt;语文小学开始做，通过两年学习，识字达到2500字以上，能写简单的文章，英语要词汇量、口语、听说能力达到初中以上水平。其他学科我们也有具体的跨越式目标，这样高的目的有没有可能实现。&lt;/p&gt;

&lt;p&gt;二、模式方法。&lt;/p&gt;

&lt;p&gt;关键有创新理论，有了创新理论才有模式和方法，这套创新理论涉及五个方面，信息化最核心怎么跟课程整合，还有怎么让老师有操作性，信息化创新人才的培养、创新思维的理论，多年来在语文论有显著成效。&lt;/p&gt;

&lt;p&gt;具体操作的时候，我们关注两个方面，传统教学只关注老师发展，西方教育强调学生为中心，我们实际能够实现跨越式的目标，同时关注两个方面，用创新的理论模式方法去对老师进行系统的四个层面的培训，另外怎么把学生主动性、积极性、创造性调动起来，信息技术环境、信息化资源不仅成为老师教的工具，更重要成为学生自主学习、自主探究的认知工具、协作交流工具，我们关注目标教与学，而且落实到具体教学实践里边去，才取得这个效果。&lt;/p&gt;

&lt;p&gt;三、实施效果。&lt;/p&gt;

&lt;p&gt;是否有可能达到这个目标呢？我们有多种测试，比较典型的测试，比如第一个农村实验区，从04年开始做，曾经对语文、英语农村学校都做过全面的测试，确实能达到我们目标。07年的时候还做过从来没有人敢做的对比测验，6月份对北京远郊十几所农村学校，由东城、西城老师出题，同一个时间语文、英语测试，刚做完一年试验，在农村只上一年幼儿园师资生源很大差别情况下，一年能够让农村学校水平赶上城市水平。&lt;/p&gt;

&lt;p&gt;二年级9月份拿广州远郊七八所学校，跟越秀名校比较，远郊学校总分高出10―12分左右。我们有一套自己全国新信息化管理模式和方法，而且我们这样跨越不光学生知识技能高速发展，我们更强调学生综合素质的提高，也就是我们实验班学生思想品德、人际关系、合作这方面总体比非实验班好的多。&lt;/p&gt;

&lt;p&gt;这里有很多具体材料，上海电视台、湖南电视台都采访过我，我说不要光听我说，多年来强调减负，越减学生负担越重。传统理论方法解决不了教育问题，我们之所以做到，有一套全新理论指导下教学模式方法，语文我们有主体主导结合的211模式，英语强调交际111模式。&lt;/p&gt;

&lt;p&gt;所有不增加学生负担，小学到四年级基本不布置课外作业，课外活动发展自己兴趣爱好，我们全部知识技能大幅度提升全部在课堂上40分钟提高效率完成，绝对不增加学生课业负担。具体测试材料都有我就不详细说了。&lt;/p&gt;

&lt;p&gt;我希望更多代表能到我们现场去，包括湖南电视台、上海电视台采访我的时候，我都让他们到现场去，去看看老师们、听听老师们反映，看看学生能力是不是达到我们要求。还有今年10月份宁夏农村县区搞比较规模大省级现场会，欢迎更多代表到现场看。&lt;/p&gt;

&lt;p&gt;四、试验过程。&lt;/p&gt;

&lt;p&gt;03、04年这套模式比较成熟以后，开始向农村拓展，03年底建立第一个农民子弟学校，06、08年已经在中西部地区，包括宁夏、甘肃、新疆、安徽、云南十个农村县区超过100多所县区学校，从06年特别语文教育部分扩展香港、新加坡。&lt;/p&gt;

&lt;p&gt;五、反思和建议&lt;/p&gt;

&lt;p&gt;最后我想谈谈十年的探索，我的一些反思、感受和对基础教育的建议。反思两个方面，中国基础教育确实取得很大成绩，有些成绩有很大创新意义，但是也存在一些缺陷，有的缺陷相当严重。取得成绩大家有目共睹，普九达标、高等教育逐渐走向大众化等。我觉得比较有创新我们既要看到别人长处，也要保持传统优势，比如教育领域三个方面是自主创新，第一个创新是教育思想观念的创新，教育思想怎么实施教育根本思想，如果教育思想观念不明确、不改变就埋头进行教育方式方法改变，那只是埋头拉车不抬头看路，可能走到斜路去。随着多媒体网络普及倡导学生为中心观念，这个对我们国内有很大影响，以学生为中心有很好的一面，但是关注学生自主学习、自主探究，有利于创新人才的培养，但是缺点只关注学，而忽视老师的教，把老师教都看成负面，我是不赞成。我们传统讲的全是教，他的弊病只讲教不是学，但是他的好处有利于教师主导功能发挥、有利于老师监控整个教育进程、有利于因材施教，这些方面也是好的不能抛弃的东西。&lt;/p&gt;

&lt;p&gt;所以90年代以来，以学生为中心口号喊的非常响亮，几乎成为最先进、最时髦的时候，我们国家有些学校并没有盲目跟风，而且保持清醒的头脑，虚心借鉴西方以学生为中心好的方面，吸纳我们传统以教为主，重教这个优势，但是也看到我们自身忽视学生自主学习不足，在这个方面从90年代形成主导主体相结合全新的教育思想。经过十多年证明，既要发挥教师主导作用，也要充分体现学生作为认知过程主体地位，两方面结合起来，哪方面缺乏都是有缺陷的，而实践证明这是最有效的教学思想，我认为是中国教育界的创新。&lt;/p&gt;

&lt;p&gt;这应该是中国教育界应该坚持，不能盲目跟西方以学生学习为中心。教学观念也是，主导主体结合他的教学观念我们就是强调有意义传递不是机械灌输和教师指导下自主探究结合，讲授不一定机械，发现不一定有意义，关键能不能将当前新知跟旧知建立内在联系，帮助学生建立新旧知识练习就是有益的学习，我认为这正是当代西方教界在这方面很大的问题，至今西方著名教育家也是承认这一点，关键有意义讲授。我们要把有意义传递跟教师主导下自主探究相结合，当然到了中学或者大学，学生基础自学高了以后，教师主导作用可以适当减弱一下，自主探究也离不开老师主导，怎么抓住问题关键？另外探究要老师提供必要的工具资源。&lt;/p&gt;</content><author><name></name></author><summary type="html">何克抗 ：基础教育“跨越式教学”的实践</summary></entry><entry><title type="html">欢迎使用（Jupyter）</title><link href="/myblog/jupyter/%E4%B8%AD%E6%96%87/%E6%AC%A2%E8%BF%8E/2020/04/14/%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8-Jupyter.html" rel="alternate" type="text/html" title="欢迎使用（Jupyter）" /><published>2020-04-14T00:00:00-05:00</published><updated>2020-04-14T00:00:00-05:00</updated><id>/myblog/jupyter/%E4%B8%AD%E6%96%87/%E6%AC%A2%E8%BF%8E/2020/04/14/%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8(Jupyter)</id><content type="html" xml:base="/myblog/jupyter/%E4%B8%AD%E6%96%87/%E6%AC%A2%E8%BF%8E/2020/04/14/%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8-Jupyter.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-04-14-欢迎使用（Jupyter）.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;&amp;#20320;&amp;#22909;&quot;&gt;&amp;#20320;&amp;#22909;&lt;a class=&quot;anchor-link&quot; href=&quot;#&amp;#20320;&amp;#22909;&quot;&gt; &lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://image.flaticon.com/icons/svg/36/36686.svg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;你好！欢迎使用！&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;你好！欢迎使用！
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;/div&gt;</content><author><name>EasonQYS</name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/myblog/images/diagram.png" /><media:content medium="image" url="/myblog/images/diagram.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Fastpages汉化版使用说明</title><link href="/myblog/2020/04/14/fastpages%E6%B1%89%E5%8C%96%E7%89%88%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.html" rel="alternate" type="text/html" title="Fastpages汉化版使用说明" /><published>2020-04-14T00:00:00-05:00</published><updated>2020-04-14T00:00:00-05:00</updated><id>/myblog/2020/04/14/fastpages%E6%B1%89%E5%8C%96%E7%89%88%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E</id><content type="html" xml:base="/myblog/2020/04/14/fastpages%E6%B1%89%E5%8C%96%E7%89%88%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.html">&lt;p&gt;1 登录自己的github账户，访问：&lt;a href=&quot;https://github.com/EasonQYS/fastpagesJupyter&quot;&gt;https://github.com/EasonQYS/fastpagesJupyter&lt;/a&gt; ，找到下面这个蓝色的字并点击，&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image1.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在自己的账户下生成一个仓库（仓库名不能使用&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image2.png&quot; alt=&quot;&quot; /&gt;），用于运行网页。&lt;/p&gt;

&lt;p&gt;2 稍等片刻（约30秒），你的github邮箱会收到一封邮件，指导你接下来的步骤。由于邮件是英文版，请参考README文档。&lt;/p&gt;

&lt;p&gt;操作过程截图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image3.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image5.png&quot; alt=&quot;&quot; /&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image6.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击Add key后需要输入github密码。&lt;/p&gt;

&lt;p&gt;3查看Actions，绿色对勾表示初始化完成。（这一步没有意义）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image7.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4在&lt;a href=&quot;https://github.com/EasonQYS/fastpagesJupyter/settings&quot;&gt;https://github.com/EasonQYS/fastpagesJupyter/settings&lt;/a&gt; settings页面下滑找到&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image8.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择master branch，等待&lt;a href=&quot;https://github.com/EasonQYS/fastpagesJupyter/actions&quot;&gt;https://github.com/EasonQYS/fastpagesJupyter/actions&lt;/a&gt; 显示成功。&lt;/p&gt;

&lt;p&gt;5如果运行正常，会生成一个新的branch，名为gh-pages。需要将网页改至该路径。（若干没有，可以先进行后续操作。稍后在回来做这一步）&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image9.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此，网站已经可以显示了。&lt;/p&gt;

&lt;p&gt;6 修改_config.yml&lt;/p&gt;

&lt;p&gt;为了让页面显示更美观，以及修改超链接为正确内容，我们可能要做一下修改。&lt;/p&gt;

&lt;p&gt;需要修改的部分均已给出中文标注。&lt;/p&gt;

&lt;p&gt;相关修改参考见截图&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;若要修改网页标题，则修改&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image11.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;若要修改网页内容，则修改index.html文件。&lt;/p&gt;

&lt;p&gt;现在网页正常显示了。&lt;/p&gt;

&lt;p&gt;7 如果没有做第5步，现在做。做完后网站正常显示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image12.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;8 上传Jupyter文件&lt;/p&gt;

&lt;p&gt;所有ipynb文件都在_notebooks目录下，其中的readme要求命名格式为YYYY-MM-DD-*.ipynb，注意，很容易忘记最后一个破折号。&lt;/p&gt;

&lt;p&gt;但是也有要求，第一个单元格内要以Markdown形式写：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image13.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image14.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;写完上传至_notebooks目录。如果是本地克隆文件夹，那么记得同步至github云端。&lt;/p&gt;

&lt;p&gt;上传之后等待一段时间，即可在博客上看到这篇文章。&lt;/p&gt;

&lt;p&gt;9 类似的，Markdown文件在_posts目录下，也能自动转换。&lt;/p&gt;

&lt;p&gt;同样，有格式要求。（支持中文名）&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image15.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;当然，少一点也行，这是一个例子：&lt;/p&gt;

&lt;p&gt;在_posts目录下创建正确命名的md文档，写入后保存。若在本地写好，记得同步（克隆）至云端。&lt;/p&gt;

&lt;p&gt;-–&lt;/p&gt;

&lt;p&gt;layout: post&lt;/p&gt;

&lt;p&gt;title: “Welcome to Jekyll!”&lt;/p&gt;

&lt;p&gt;-–&lt;/p&gt;

&lt;p&gt;# Welcome&lt;/p&gt;

&lt;p&gt;**Hello world**, this is my first Jekyll blog post.&lt;/p&gt;

&lt;p&gt;I hope you like it!&lt;/p&gt;

&lt;p&gt;10 此外，_docs还能转换docx文件，方法类似。&lt;/p&gt;

&lt;p&gt;将文档上传至/_docs目录下即可。&lt;/p&gt;

&lt;p&gt;11 删帖，删除上述文件即可。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;遇到的坑：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1、md文档可以转博客，但是rst文档好像不行。解决方案，将rst文件重命名时后缀改为md。&lt;/p&gt;

&lt;p&gt;2、若上传多个文档，其中一个报错，同批所有文档都不显示。故每次上传一个文档为佳，利于排查。每个文档生成网页的时间大约在2分钟左右。需要等待至Action成绿色√才表示完成，可以查看网页。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image16.tmp&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3、可加载网页图片，但不能加载本地图片（文档中自带的图片）。例如下图方式添加的图片不能显示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-14-fastpages汉化版使用说明/media/image17.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">1 登录自己的github账户，访问：https://github.com/EasonQYS/fastpagesJupyter ，找到下面这个蓝色的字并点击，</summary></entry><entry><title type="html">欢迎（ms Word）</title><link href="/myblog/2020/04/13/%E6%AC%A2%E8%BF%8E-MS-Word.html" rel="alternate" type="text/html" title="欢迎（ms Word）" /><published>2020-04-13T00:00:00-05:00</published><updated>2020-04-13T00:00:00-05:00</updated><id>/myblog/2020/04/13/%E6%AC%A2%E8%BF%8E(MS-Word)</id><content type="html" xml:base="/myblog/2020/04/13/%E6%AC%A2%E8%BF%8E-MS-Word.html">&lt;p&gt;欢迎你&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;欢迎你&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;欢迎你&lt;/p&gt;

&lt;p&gt;欢迎你&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/myblog/assets/img/2020-04-13-欢迎（MS-Word）/media/image1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">欢迎你</summary></entry><entry><title type="html">欢迎使用Jekyll!（Markdown）</title><link href="/myblog/2020/04/12/%E4%BD%A0%E5%A5%BD.html" rel="alternate" type="text/html" title="欢迎使用Jekyll!（Markdown）" /><published>2020-04-12T00:00:00-05:00</published><updated>2020-04-12T00:00:00-05:00</updated><id>/myblog/2020/04/12/%E4%BD%A0%E5%A5%BD</id><content type="html" xml:base="/myblog/2020/04/12/%E4%BD%A0%E5%A5%BD.html">&lt;p&gt;&lt;strong&gt;Jekyll博客&lt;/strong&gt;将从这里开始.&lt;/p&gt;

&lt;p&gt;希望&lt;strong&gt;你&lt;/strong&gt;喜欢!&lt;/p&gt;</content><author><name></name></author><summary type="html">Jekyll博客将从这里开始.</summary></entry><entry><title type="html">虚谷号jupyter入门教程</title><link href="/myblog/2020/04/10/%E8%99%9A%E8%B0%B7%E5%8F%B7Jupyter%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html" rel="alternate" type="text/html" title="虚谷号jupyter入门教程" /><published>2020-04-10T00:00:00-05:00</published><updated>2020-04-10T00:00:00-05:00</updated><id>/myblog/2020/04/10/%E8%99%9A%E8%B0%B7%E5%8F%B7Jupyter%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B</id><content type="html" xml:base="/myblog/2020/04/10/%E8%99%9A%E8%B0%B7%E5%8F%B7Jupyter%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B.html">&lt;p&gt;&lt;strong&gt;虚谷号Jupyter入门教程&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.1 什么是Jupyter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jupyter的全称为Jupyter Notebook（此前被称为IPython notebook），是一个交互式笔记本，支持运行40多种编程语言。通过Jupyter，可以通过Web页面在虚谷号上运行Python代码和Linux命令。虚谷号的无线模式主要采用Jupyter来实现。&lt;/p&gt;

&lt;p&gt;Jupyter的本质是一个Web应用程序，便于创建和共享程序文档，支持实时代码，数学方程，可视化和Markdown。很多人喜欢直接在Jupyter上写代码，并同步记录学习心得，这样的学习笔记实际上就是一个很好的教程。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.2 Jupyter快速入&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1）访问Jupyter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;看到了这个文件，相信你已经打开了虚谷号的Jupyter。请使用谷歌浏览器（或者使用谷歌浏览器内核的浏览器）访问Jupyter。虚谷号的Wi-Fi有记忆功能，一般来说IP地址是不会变化的。当Wi-Fi信息设置好后，只要提供电源和Wi-Fi信号，就能使用Jupyter来访问虚谷号。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2）浏览Jupyter笔记&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;虚谷号上提供了很多学习笔记，默认放在“vvBoardbook”文件夹中。通过浏览这些学习笔记，可以快速掌握Python代码，了解虚谷号的基本功能。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/2020-04-10-虚谷号Jupyter入门教程/media/image1.png&quot; alt=&quot;图片包含 屏幕截图 描述已自动生成&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这些学习笔记中，有文字、图片还有Python代码。笔记中的代码可以即时编辑，还可以在线执行，并且能够返回运行结果。&lt;/p&gt;

&lt;p&gt;用鼠标选中代码输入框（jupyter中称为“单元格”），单元格出现蓝色或者绿色边框，表示被选中。在菜单中选择“执行”命令，单元格的下方将出现单元格代码执行效果。执行完毕后，“in [ ]”中的括号将出现一个数字，表示单元格代码运行的次序。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/2020-04-10-虚谷号Jupyter入门教程/media/image2.jpeg&quot; alt=&quot;图片包含 屏幕截图 描述已自动生成&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.3 Jupyter可以做什么&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1）学习Python编程&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jupyter被誉为最好用的Python IDE之一，用来调试Python事半功倍。还可以在网页上显示虚谷号的传感器数值、摄像头内容等等。其实Jupyter不仅仅支持Python，还支持多种语言，这需要另外安装插件。&lt;/p&gt;

&lt;p&gt;通过“新建”-“Python3”，即可新建一个笔记。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2）运行Linux命令&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;通过“新建”-“终端”，即可打开Web界面的终端。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/img/2020-04-10-虚谷号Jupyter入门教程/media/image3.jpeg&quot; alt=&quot;图片包含 屏幕截图 描述已自动生成&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在仿真的终端页面，Jupyter几乎支持所有的命令，如安装软件、安装Python库文件、运行Python程序等。当关闭窗口后，再次打开，还能够看到之前的命令运行状态。&lt;/p&gt;

&lt;p&gt;通过终端页面，还能够看到一共有几个命令窗口在运行。在不同电脑登陆Jupyter，可以共享这一界面，尤其适用于教学。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3）管理虚谷号&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jupyter支持文件的上传和下载，新建文件、文件夹，删除、改名等操作，可以用来管理虚谷号的文件资源，可以安装各种库、软件等等。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.4 Jupyter的代码调试技巧&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1）如何快速运行指定的&lt;/strong&gt;&lt;strong&gt;代码？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jupyter单元格中的代码，可以按照任意次序进行执行。Jupyter提供了多种执行代码的方式，在“单元格”菜单中。分为：运行所有单元格、运行所有、运行上面的代码块、运行下面的代码块等。&lt;/p&gt;

&lt;p&gt;在调试代码的过程中，稍微复杂些的代码，往往需要全部重启，好查看程序的整体效果。如在测试GPIO的代码时，之前的代码对后面的代码会产生影响，这就需要重启服务。具体的功能在“服务”菜单中。可以选择“重启 &amp;amp; 清空输入”、“重启 &amp;amp; 运行所有”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.为什么打开笔记的时候，所有的代码都已经运行了？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jupyter笔记会保留代码运行的状态，打开一个笔记往往会看到很多的输出信息。如何让这些信息消失，保持代码的未运行状态？那就需要在关闭笔记前，执行“重启 &amp;amp; 清空输入”，然后保存退出。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.为什么打开多个笔记后Iupyter的运行速度变慢？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;打开Iupyter的笔记，关闭页面并不能结束程序运行，还会有线程在单独运行，占用虚谷号的内存。当打开较多的程序，直接使用关闭页面的方式来关闭笔记，可能会导致内存不够用而死机。创客版的内存比教育版小，感觉会比较明显。&lt;/p&gt;

&lt;p&gt;避免这种情况最好方法便是彻底结束程序运行。结束程序的方法如下：1、运行完程序，需要结束则在程序的页面选择“服务”-“关闭”。2、关闭程序的页面，看到程序的目录刚运行的程序呈绿色，并且显示运行，勾选前面的小方框，在选择出现的黄色的关闭选项，即可结束程序的运行。3、点击Jupyter的“运行”，会看到当前在运行的终端和笔记，逐个关闭即可。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.5 如何用Jupyter写笔记&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jupyter的笔记中既可以插入代码，也可以用MarkDown语法排版的文字。&lt;/p&gt;

&lt;p&gt;MarkDown教程：&lt;a href=&quot;https://baike.baidu.com/item/markdown/3245829?fr=aladdin&quot;&gt;https://baike.baidu.com/item/markdown/3245829?fr=aladdin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jupyter支持用“CTRL+C”的形式插入图片。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.6 关于Jupyter的常见问题&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1）除了虚谷号内置的笔记，还有其他的笔记吗？&lt;/p&gt;

&lt;p&gt;虚谷号团队在不断编写学习笔记，除此之外，在网上能够找到很多jupyter学习笔记（扩展名为ipynb），如jupyter的官方网站。（&lt;a href=&quot;https://nbviewer.jupyter.org/&quot;&gt;https://nbviewer.jupyter.org/&lt;/a&gt;）。&lt;/p&gt;

&lt;p&gt;2）可以多人一起使用Jupyter吗？&lt;/p&gt;

&lt;p&gt;可以。甚至可以多人共同编辑一个笔记。。&lt;/p&gt;

&lt;p&gt;3）Jupyter的笔记能不能导出来？&lt;/p&gt;

&lt;p&gt;当然可以，Jupyter的笔记能够导出很多种格式，如py、pdf、html等等。&lt;/p&gt;

&lt;p&gt;4）在Jupyter上，如何做交互，比如输入字符之类。&lt;/p&gt;

&lt;p&gt;不仅可以直接在网页上输入，还能够利用Jupyter的网页小控件，做文本框、选择框等。图片也可以直接显示在网页上。&lt;/p&gt;</content><author><name></name></author><summary type="html">虚谷号Jupyter入门教程</summary></entry><entry><title type="html">GitHub Actions: Providing Data Scientists With New Superpowers</title><link href="/myblog/actions/markdown/2020/03/06/fastpages-actions.html" rel="alternate" type="text/html" title="GitHub Actions: Providing Data Scientists With New Superpowers" /><published>2020-03-06T00:00:00-06:00</published><updated>2020-03-06T00:00:00-06:00</updated><id>/myblog/actions/markdown/2020/03/06/fastpages-actions</id><content type="html" xml:base="/myblog/actions/markdown/2020/03/06/fastpages-actions.html">&lt;h1 id=&quot;what-superpowers&quot;&gt;What Superpowers?&lt;/h1&gt;

&lt;p&gt;Hi, I’m &lt;a href=&quot;https://twitter.com/HamelHusain&quot;&gt;Hamel Husain&lt;/a&gt;.  I’m a machine learning engineer at GitHub.  Recently, GitHub released a new product called &lt;a href=&quot;https://github.com/features/actions&quot;&gt;GitHub Actions&lt;/a&gt;, which has mostly flown under the radar in the machine learning and data science community as just another continuous integration tool.&lt;/p&gt;

&lt;p&gt;Recently, I’ve been able to use GitHub Actions to build some very unique tools for Data Scientists, which I want to share with you today.  Most importantly, I hope to get you excited about GitHub Actions, and the promise it has for giving you new superpowers as a Data Scientist.  Here are two projects I recently built with Actions that show off its potential:&lt;/p&gt;

&lt;h2 id=&quot;fastpages&quot;&gt;fastpages&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fastai/fastpages&quot;&gt;fastpages&lt;/a&gt; is an automated, open-source blogging platform with enhanced support for Jupyter notebooks.  You save your notebooks, markdown, or Word docs into a directory on GitHub, and they automatically become blog posts. Read the announcement below:&lt;/p&gt;

&lt;h2 id=&quot;machine-learning-ops&quot;&gt;Machine Learning Ops&lt;/h2&gt;

&lt;p&gt;Wouldn’t it be cool if you could invoke a chatbot natively on GitHub to test your machine learning models on the infrastructure of your choice (GPUs), log all the results, and give you a rich report back in a pull request so that everyone could see the results?  You can with GitHub Actions!&lt;/p&gt;

&lt;p&gt;Consider the below annotated screenshot of &lt;a href=&quot;https://github.com/machine-learning-apps/actions-ml-cicd/pull/34&quot;&gt;this Pull Request&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/fastpages_posts/actions/pr_1.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/fastpages_posts/actions/pr_2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A more in-depth explanation about the above project can be viewed in this video:&lt;/p&gt;

&lt;center&gt;
    &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Ll50l3fsoYs&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/center&gt;

&lt;p&gt;Using GitHub Actions for machine learning workflows is starting to catch on.  &lt;a href=&quot;https://twitter.com/julien_c&quot;&gt;Julien Chaumond&lt;/a&gt;, CTO of &lt;a href=&quot;https://huggingface.co/&quot;&gt;Hugging Face&lt;/a&gt;, says:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;GitHub Actions are great because they let us do CI on GPUs (as most of our users use the library on GPUs not on CPUs), on our own infra! &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Additionally, you can host a GitHub Action for other people so others can use parts of your workflow without having to re-create your steps.  I provide examples of this below.&lt;/p&gt;

&lt;h1 id=&quot;a-gentle-introduction-to-github-actions&quot;&gt;A Gentle Introduction To GitHub Actions&lt;/h1&gt;

&lt;h2 id=&quot;what-are-github-actions&quot;&gt;What Are GitHub Actions?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/features/actions&quot;&gt;GitHub Actions&lt;/a&gt; allow you to run arbitrary code in response to &lt;a href=&quot;https://help.github.com/en/actions/reference/events-that-trigger-workflows&quot;&gt;events&lt;/a&gt;.  Events are activities that happen on GitHub such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Opening a pull request&lt;/li&gt;
  &lt;li&gt;Making an issue comment&lt;/li&gt;
  &lt;li&gt;Labeling an issue&lt;/li&gt;
  &lt;li&gt;Creating a new branch&lt;/li&gt;
  &lt;li&gt;… &lt;a href=&quot;https://help.github.com/en/actions/reference/events-that-trigger-workflows&quot;&gt;and many more&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When an event is created, the GitHub Actions context is hydrated with a &lt;a href=&quot;https://developer.github.com/v3/activity/events/types/&quot;&gt;payload&lt;/a&gt; containing metadata for that event.  Below is an example of a payload that is received when an issue is created:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;action&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;created&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;issue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;444500041&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;number&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Spelling error in the README file&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;user&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;login&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Codertocat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;User&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;labels&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1362934389&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;node_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MDU6TGFiZWwxMzYyOTM0Mzg5&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bug&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;It looks like you accidently spelled 'commit' with two 't's.&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This functionality allows you to respond to various events on GitHub in an automated way.   In addition to this payload, GitHub Actions also provide a plethora &lt;a href=&quot;https://help.github.com/en/actions/reference/contexts-and-expression-syntax-for-github-actions#github-context&quot;&gt;of variables&lt;/a&gt; and &lt;a href=&quot;https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables#default-environment-variables&quot;&gt;environment variables&lt;/a&gt; that afford easy to access metadata such as the username and the owner of the repo.  Additionally, other people can package useful functionality into an Action that other people can inherit.  For example, consider the below Action that helps you &lt;a href=&quot;https://github.com/pypa/gh-action-pypi-publish&quot;&gt;publish python packages to PyPi&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/pypa/gh-action-pypi-publish#usage&quot;&gt;Usage&lt;/a&gt; section describes how this Action can be used:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Publish a Python distribution to PyPI&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pypa/gh-action-pypi-publish@master&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;__token__&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.pypi_password }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This Action expects two inputs: &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt; and a &lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;.  You will notice that the password is referencing a variable called &lt;code class=&quot;highlighter-rouge&quot;&gt;secrets&lt;/code&gt;, which is a variable that contains an &lt;a href=&quot;https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets&quot;&gt;encrypted secret&lt;/a&gt; that you can upload to your GitHub repository.  There are thousands of Actions (that are free) for a wide variety of tasks that can be discovered on the &lt;a href=&quot;https://github.com/marketplace?type=actions&quot;&gt;GitHub Marketplace&lt;/a&gt;.  The ability to inherit ready-made Actions in your workflow allows you to accomplish complex tasks without implementing all of the logic yourself.  Some useful Actions for those getting started are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/actions/checkout&quot;&gt;actions/checkout&lt;/a&gt;:  Allows you to quickly clone the contents of your repository into your environment, which you often want to do.  This does a number of other things such as automatically mount your repository’s files into downstream Docker containers.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mxschmitt/action-tmate&quot;&gt;mxschmitt/action-tmate&lt;/a&gt;: Proivdes a way to debug Actions interactively.  This uses port forwarding to give you a terminal in the browser that is connected to your Actions runner.   Be careful not to expose sensitive information if you use this.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/actions/github-script&quot;&gt;actions/github-script&lt;/a&gt;:  Gives you a pre-authenticated &lt;a href=&quot;https://octokit.github.io/rest.js/&quot;&gt;ocotokit.js&lt;/a&gt; client that allows you to interact with the GitHub API to accomplish almost any task on GitHub automatically.  Only &lt;a href=&quot;https://help.github.com/en/actions/configuring-and-managing-workflows/authenticating-with-the-github_token#permissions-for-the-github_token&quot;&gt;these endpoints&lt;/a&gt; are supported (for example, the &lt;a href=&quot;https://developer.github.com/v3/actions/secrets/&quot;&gt;secrets endpoint&lt;/a&gt; is not in that list).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to the aforementioned Actions, it is helpful to go peruse the official &lt;a href=&quot;https://help.github.com/en/actions&quot;&gt;GitHub Actions docs&lt;/a&gt; before diving in.&lt;/p&gt;

&lt;h2 id=&quot;example-a-fastpages-action-workflow&quot;&gt;Example: A fastpages Action Workflow&lt;/h2&gt;

&lt;p&gt;The best to way familiarize yourself with Actions is by studying examples.  Let’s take a look at the Action workflow that automates the build of &lt;a href=&quot;https://fastpages.fast.ai/fastpages/jupyter/2020/02/21/introducing-fastpages.html&quot;&gt;fastpages&lt;/a&gt; (the platform used to write this blog post).&lt;/p&gt;

&lt;h3 id=&quot;part-1-define-workflow-triggers&quot;&gt;Part 1: Define Workflow Triggers&lt;/h3&gt;

&lt;p&gt;blog, &lt;a href=&quot;https://github.com/fastai/fastpages/blob/master/.github/workflows/ci.yaml&quot;&gt;defined in ci.yaml&lt;/a&gt;.  Like all Actions workflows, this is YAML file is located in the .github/workflows directory of the GitHub repo.&lt;/p&gt;

&lt;p&gt;The top of this YAML file looks like this:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;CI&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;pull_request&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This means that this workflow is triggered on either a &lt;a href=&quot;https://help.github.com/en/actions/reference/events-that-trigger-workflows#push-event-push&quot;&gt;push&lt;/a&gt; or &lt;a href=&quot;https://help.github.com/en/actions/reference/events-that-trigger-workflows#pull-request-event-pull_request&quot;&gt;pull request&lt;/a&gt; event.  Furthermore, push events are filtered such that only pushes to the master branch will trigger the workflow, whereas all pull requests will trigger this workflow.  It is important to note that pull requests opened from forks will have read-only access to the base repository and cannot access any secrets for security reasons.  The reason for defining the workflow in this way is we wanted to trigger the same workflow to test pull requests as well as build and deploy the website when a PR is merged into master.  This will be clarified as we step through the rest of the YAML file.&lt;/p&gt;

&lt;h3 id=&quot;part-2-define-jobs&quot;&gt;Part 2: Define Jobs&lt;/h3&gt;

&lt;p&gt;Next, we define jobs (there is only one in this workflow).  Per &lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobs&quot;&gt;the docs&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A workflow run is made up of one or more jobs. Jobs run in parallel by default.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;     
  &lt;span class=&quot;na&quot;&gt;build-site&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;( github.event.commits[0].message != 'Initial commit' ) || github.run_number &amp;gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The keyword &lt;code class=&quot;highlighter-rouge&quot;&gt;build-site&lt;/code&gt; is the name of your job and you can name it whatever you want. In this case, we have a conditional if statement that dictates if this job should be run or not.  We are trying to ensure that this workflow does not run when the first commit to a repo is made with the message ‘Initial commit’.  The first variable in the if statement, &lt;a href=&quot;https://help.github.com/en/actions/reference/contexts-and-expression-syntax-for-github-actions#github-context&quot;&gt;github.event&lt;/a&gt;, contains a &lt;a href=&quot;https://developer.github.com/v3/activity/events/types/#webhook-payload-example-31&quot;&gt;json payload&lt;/a&gt; of the event that triggered this workflow.  When developing workflows, it is helpful to print this variable in order to inspect its structure, which you can accomplish with the following YAML:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;see payload&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;echo &quot;PAYLOAD:\n${PAYLOAD}\n&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;PAYLOAD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ toJSON(github.event) }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Note: the above step is only for debugging and is not currently in the workflow.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://help.github.com/en/actions/reference/contexts-and-expression-syntax-for-github-actions#tojson&quot;&gt;toJson&lt;/a&gt; is a handy function that returns a pretty-printed JSON representation of the variable.  The output is printed directly in the logs contained in the Actions tab of your repo.  In this example, printing the payload for a push event will look like this (truncated for brevity):&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ref&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;refs/tags/simple-tag&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;before&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;6113728f27ae8c7b1a77c8d03f9ed6e0adf246&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;created&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;deleted&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;forced&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;base_ref&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;commits&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;updated README.md&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;hamelsmu&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;head_commit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Therefore, the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;github.event.commits[0].message&lt;/code&gt; will retrieve the first commit message in the array of commits.  Since we are looking for situations where there is only one commit, this logic suffices.  The second variable in the if statement, &lt;a href=&quot;https://help.github.com/en/actions/reference/contexts-and-expression-syntax-for-github-actions#github-context&quot;&gt;github.run_number&lt;/a&gt; is a special variable in Actions which:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;[is a] unique number for each run of a particular workflow in a repository. This number begins at 1 for the workflow’s first run, and increments with each new run. This number does not change if you re-run the workflow run.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Therefore, the &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt; statement introduced above:&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;( github.event.commits[0].message != 'Initial commit' ) || github.run_number &amp;gt; &lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Allows the workflow to run when the commit message is “Initial commit” as long as it is not the first commit.  ( &lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt; is a logical &lt;code class=&quot;highlighter-rouge&quot;&gt;or&lt;/code&gt; operator).&lt;/p&gt;

&lt;p&gt;Finally, the line &lt;code class=&quot;highlighter-rouge&quot;&gt;runs-on: ubuntu-latest&lt;/code&gt; specifies the &lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on&quot;&gt;host operating system&lt;/a&gt; that your workflows will run in.&lt;/p&gt;

&lt;h3 id=&quot;part-3-define-steps&quot;&gt;Part 3: Define Steps&lt;/h3&gt;

&lt;p&gt;Per the &lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idsteps&quot;&gt;docs&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A job contains a sequence of tasks called steps. Steps can run commands, run setup tasks, or run an Action in your repository, a public repository, or an Action published in a Docker registry. Not all steps run Actions, but all Actions run as a step. Each step runs in its own process in the runner environment and has access to the workspace and filesystem. Because steps run in their own process, changes to environment variables are not preserved between steps. GitHub provides built-in steps to set up and complete a job.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Below are the first two steps &lt;a href=&quot;https://github.com/fastai/fastpages/blob/master/.github/workflows/ci.yaml&quot;&gt;in our workflow&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Copy Repository Contents&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@master&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;persist-credentials&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;

   &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;convert notebooks and word docs to posts&lt;/span&gt;
     &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./_action_files&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first step creates a copy of your repository in the Actions file system, with the help of the utility &lt;a href=&quot;https://github.com/actions/checkout&quot;&gt;action/checkout&lt;/a&gt;.  This utility only fetches the last commit by default and saves files into a directory (whose path is stored in the environment variable &lt;a href=&quot;https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables&quot;&gt;GITHUB_WORKSPACE&lt;/a&gt; that is accessible by subsequent steps in your job.  The second step runs the &lt;a href=&quot;https://github.com/fastai/fastpages#using-the-github-action--your-own-custom-blog&quot;&gt;fastai/fastpages&lt;/a&gt; Action, which converts notebooks and word documents to blog posts automatically.  In this case, the syntax:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./_action_files&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;is a special case where the pre-made GitHub Action we want to run happens to be defined in the same repo that runs this workflow.  This syntax allows us to test changes to this pre-made Action when evaluating PRs by referencing the directory in the current repository that defines that pre-made Action.  &lt;em&gt;Note: Building pre-made Actions is beyond the scope of this tutorial.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The next three steps in our workflow are defined below:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;setup directories for Jekyll build&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;rm -rf _site&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;sudo chmod -R 777 .&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Jekyll build&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;docker://hamelsmu/fastpages-jekyll&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bash -c &quot;gem install bundler &amp;amp;&amp;amp; jekyll build -V&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;JEKYLL_ENV&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;production'&lt;/span&gt;
  
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;copy CNAME file into _site if CNAME exists&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;sudo chmod -R 777 _site/&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;cp CNAME _site/ 2&amp;gt;/dev/null || :&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The step named &lt;code class=&quot;highlighter-rouge&quot;&gt;setup directories for Jekyll build&lt;/code&gt; executes shell commands that remove the &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; folder in order to get rid of stale files related to the page we want to build, as well as grant permissions to all the files in our repo to subsequent steps.&lt;/p&gt;

&lt;p&gt;The step named &lt;code class=&quot;highlighter-rouge&quot;&gt;Jekyll build&lt;/code&gt; executes a docker container hosted by the Jekyll community &lt;a href=&quot;https://hub.docker.com/r/jekyll/jekyll/&quot;&gt;on Dockerhub called &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll/jekyll&lt;/code&gt;&lt;/a&gt;.  For those not familiar with Docker, see &lt;a href=&quot;https://towardsdatascience.com/how-docker-can-help-you-become-a-more-effective-data-scientist-7fc048ef91d5?source=friends_link&amp;amp;sk=c554b55109102d47145c4b3381bee3ee&quot;&gt;this tutorial&lt;/a&gt;.  The name of this container is called &lt;code class=&quot;highlighter-rouge&quot;&gt;hamelsmu/fastpages-jekyll&lt;/code&gt; because I’m adding some additional dependencies to &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll/jekyll&lt;/code&gt; and hosting those on my DockerHub account for faster build times&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.  The &lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstepswithargs&quot;&gt;args parameter&lt;/a&gt; allows you to execute arbitrary commands with the Docker container by overriding the CMD instruction in the Dockerfile.  We use this Docker container hosted on Dockerhub so we don’t have to deal with installing and configuring all of the complicated dependencies for Jekyll.  The files from our repo are already available in the Actions runtime due to the first step in this workflow, and are mounted into this Docker container automatically for us.  In this case, we are running the command &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt;, which builds our website and places relevant assets them into the &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; folder. For more information about Jekyll, &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;read the official docs&lt;/a&gt;.  Finally, the &lt;code class=&quot;highlighter-rouge&quot;&gt;env&lt;/code&gt; parameter allows me to pass an environment variable into the Docker container.&lt;/p&gt;

&lt;p&gt;The final command above copies a &lt;code class=&quot;highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; file into the _site folder, which we need for the custom domain &lt;a href=&quot;https://fastpages.fast.ai/&quot;&gt;https://fastpages.fast.ai&lt;/a&gt;. Setting up custom domains are outside the scope of this article.&lt;/p&gt;

&lt;p&gt;The final step in our workflow is defined below:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deploy&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;github.event_name == 'push'&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;peaceiris/actions-gh-pages@v3&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;deploy_key&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;${{ secrets.SSH_DEPLOY_KEY }}&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;publish_dir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./_site&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The statement&lt;/p&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;github.event_name == 'push'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;uses the variable &lt;a href=&quot;https://help.github.com/en/actions/reference/contexts-and-expression-syntax-for-github-actions#github-context&quot;&gt;github.event_name&lt;/a&gt; to ensure this step only runs when a push event ( in this case only pushes to the master branch trigger this workflow) occur.&lt;/p&gt;

&lt;p&gt;This step deploys the fastpages website by copying the contents of the &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; folder to the root of the &lt;code class=&quot;highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch, which &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; uses for hosting.  This step uses the &lt;a href=&quot;https://github.com/peaceiris/actions-gh-pages&quot;&gt;peaceiris/actions-gh-pages&lt;/a&gt; Action, pinned at version 3.  &lt;a href=&quot;https://github.com/peaceiris/actions-gh-pages&quot;&gt;Their README&lt;/a&gt; describes various options and inputs for this Action.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;We hope that this has shed some light on how we use GitHub Actions to automate fastpages.  While we only covered one workflow above, we hope this provides enough intuition to understand the &lt;a href=&quot;https://github.com/fastai/fastpages/tree/master/.github/workflows&quot;&gt;other workflows&lt;/a&gt; in fastpages.  We have only scratched the surface of GitHub Actions in this blog post, but we provide other materials below for those who want to dive in deeper.  We have not covered how to host an Action for other people, but you can &lt;a href=&quot;https://help.github.com/en/actions/building-actions&quot;&gt;start with these docs&lt;/a&gt; to learn more.&lt;/p&gt;

&lt;p&gt;Still confused about how GitHub Actions could be used for Data Science?  Here are some ideas of things you can build:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Jupyter Widgets that trigger GitHub Actions to perform various tasks on GitHub via the &lt;a href=&quot;https://help.github.com/en/actions/reference/events-that-trigger-workflows#external-events-repository_dispatch&quot;&gt;repository dispatch event&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Integration with &lt;a href=&quot;https://www.pachyderm.com/&quot;&gt;Pachyderm&lt;/a&gt; for data versioning.&lt;/li&gt;
  &lt;li&gt;Integration with your favorite cloud machine learning services, such &lt;a href=&quot;https://aws.amazon.com/sagemaker/&quot;&gt;Sagemaker&lt;/a&gt;, &lt;a href=&quot;https://azure.microsoft.com/en-us/free/machine-learning/&quot;&gt;Azure ML&lt;/a&gt; or GCP’s &lt;a href=&quot;https://cloud.google.com/ai-platform&quot;&gt;AI Platform&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;related-materials&quot;&gt;Related Materials&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;GitHub Actions official &lt;a href=&quot;https://help.github.com/en/actions&quot;&gt;documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/actions/hello-world-docker-action&quot;&gt;Hello world Docker Action&lt;/a&gt;: A template to demonstrate how to build a Docker Action for other people to use.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/sdras/awesome-actions&quot;&gt;Awesome Actions&lt;/a&gt;: A curated list of interesting GitHub Actions by topic.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://towardsdatascience.com/how-docker-can-help-you-become-a-more-effective-data-scientist-7fc048ef91d5?source=friends_link&amp;amp;sk=c554b55109102d47145c4b3381bee3ee&quot;&gt;A tutorial on Docker&lt;/a&gt; for Data Scientists.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;getting-in-touch&quot;&gt;Getting In Touch&lt;/h3&gt;

&lt;p&gt;Please feel free to get in touch with us on Twitter:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Hamel Husain &lt;a href=&quot;https://twitter.com/HamelHusain&quot;&gt;@HamelHusain&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jeremy Howard &lt;a href=&quot;https://twitter.com/jeremyphoward&quot;&gt;@jeremyphoward&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h5 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h5&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;You can see some of Hugging Face’s Actions workflows for machine learning &lt;a href=&quot;https://github.com/huggingface/transformers/tree/master/.github/workflows&quot;&gt;on GitHub&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;These additional dependencies are &lt;a href=&quot;https://github.com/fastai/fastpages/blob/master/_action_files/fastpages-jekyll.Dockerfile&quot;&gt;defined here&lt;/a&gt;, which uses the “jekyll build” command to add ruby dedpendencies from the Gemfile located at the root of the repo.  Additionally, this docker image is built by another Action workflow &lt;a href=&quot;https://github.com/fastai/fastpages/blob/master/.github/workflows/docker.yaml&quot;&gt;defined here&lt;/a&gt;. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Hamel Husain &amp; Jeremy Howard</name></author><summary type="html">What Superpowers?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/myblog/images/fastpages_posts/actions/actions_logo.png" /><media:content medium="image" url="/myblog/images/fastpages_posts/actions/actions_logo.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>